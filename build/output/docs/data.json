{
    "project": {
        "name": "Creatine",
        "version": "0.2.0dev",
        "description": "Creatine",
        "url": "http://guineashots.com/creatine",
        "logo": "assets/docs-icon.png"
    },
    "files": {
        "display\\DiscreteBar.js": {
            "name": "display\\DiscreteBar.js",
            "modules": {},
            "classes": {
                "DiscreteBar": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "display\\FlexBitmap.js": {
            "name": "display\\FlexBitmap.js",
            "modules": {},
            "classes": {
                "FlexBitmap": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "display\\ProgressBar.js": {
            "name": "display\\ProgressBar.js",
            "modules": {},
            "classes": {
                "ProgressBar": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "ecs\\Component.js": {
            "name": "ecs\\Component.js",
            "modules": {},
            "classes": {
                "Component": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "ecs\\Entity.js": {
            "name": "ecs\\Entity.js",
            "modules": {},
            "classes": {
                "Entity": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "ecs\\System.js": {
            "name": "ecs\\System.js",
            "modules": {},
            "classes": {
                "System": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "helpers\\Device.js": {
            "name": "helpers\\Device.js",
            "modules": {},
            "classes": {
                "Device": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "helpers\\Display.js": {
            "name": "helpers\\Display.js",
            "modules": {},
            "classes": {
                "Display": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "helpers\\functions.js": {
            "name": "helpers\\functions.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "layout\\BoxSizer.js": {
            "name": "layout\\BoxSizer.js",
            "modules": {},
            "classes": {
                "BoxSizer": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "layout\\GridSizer.js": {
            "name": "layout\\GridSizer.js",
            "modules": {},
            "classes": {
                "GridSizer": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "scene\\Director.js": {
            "name": "scene\\Director.js",
            "modules": {},
            "classes": {
                "Director": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "scene\\Scene.js": {
            "name": "scene\\Scene.js",
            "modules": {},
            "classes": {
                "Scene": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "tmx\\TMXImageLayer.js": {
            "name": "tmx\\TMXImageLayer.js",
            "modules": {},
            "classes": {
                "TMXImageLayer": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "tmx\\TMXIsometricTileLayer.js": {
            "name": "tmx\\TMXIsometricTileLayer.js",
            "modules": {},
            "classes": {
                "TMXIsometricTileLayer": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "tmx\\TMXMap.js": {
            "name": "tmx\\TMXMap.js",
            "modules": {},
            "classes": {
                "TMXMap": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "tmx\\TMXObjectLayer.js": {
            "name": "tmx\\TMXObjectLayer.js",
            "modules": {},
            "classes": {
                "TMXObjectLayer": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "tmx\\TMXOrthogonalTileLayer.js": {
            "name": "tmx\\TMXOrthogonalTileLayer.js",
            "modules": {},
            "classes": {
                "TMXOrthogonalTileLayer": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "tmx\\TMXStaggeredTileLayer.js": {
            "name": "tmx\\TMXStaggeredTileLayer.js",
            "modules": {},
            "classes": {
                "TMXStaggeredTileLayer": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "tmx\\TMXTileLayer.js": {
            "name": "tmx\\TMXTileLayer.js",
            "modules": {},
            "classes": {
                "TMXTileLayer": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "tmx\\TMXTileset.js": {
            "name": "tmx\\TMXTileset.js",
            "modules": {},
            "classes": {
                "TMXTileset": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "transitions\\FadeIn.js": {
            "name": "transitions\\FadeIn.js",
            "modules": {
                "Transitions": 1
            },
            "classes": {
                "FadeIn": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "transitions\\FadeInOut.js": {
            "name": "transitions\\FadeInOut.js",
            "modules": {},
            "classes": {
                "FadeInOut": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "transitions\\FadeOut.js": {
            "name": "transitions\\FadeOut.js",
            "modules": {},
            "classes": {
                "FadeOut": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "transitions\\MoveIn.js": {
            "name": "transitions\\MoveIn.js",
            "modules": {},
            "classes": {
                "MoveIn": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "transitions\\MoveOut.js": {
            "name": "transitions\\MoveOut.js",
            "modules": {},
            "classes": {
                "MoveOut": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "transitions\\ScaleIn.js": {
            "name": "transitions\\ScaleIn.js",
            "modules": {},
            "classes": {
                "ScaleIn": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "transitions\\ScaleInOut.js": {
            "name": "transitions\\ScaleInOut.js",
            "modules": {},
            "classes": {
                "ScaleInOut": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "transitions\\ScaleOut.js": {
            "name": "transitions\\ScaleOut.js",
            "modules": {},
            "classes": {
                "ScaleOut": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "transitions\\Scroll.js": {
            "name": "transitions\\Scroll.js",
            "modules": {},
            "classes": {
                "Scroll": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "creatine.js": {
            "name": "creatine.js",
            "modules": {
                "Creatine": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        }
    },
    "modules": {
        "Creatine": {
            "name": "Creatine",
            "submodules": {
                "Transitions": 1
            },
            "classes": {
                "DiscreteBar": 1,
                "FlexBitmap": 1,
                "ProgressBar": 1,
                "Component": 1,
                "Entity": 1,
                "System": 1,
                "Device": 1,
                "Display": 1,
                "BoxSizer": 1,
                "GridSizer": 1,
                "Director": 1,
                "Scene": 1,
                "TMXImageLayer": 1,
                "TMXIsometricTileLayer": 1,
                "TMXMap": 1,
                "TMXObjectLayer": 1,
                "TMXOrthogonalTileLayer": 1,
                "TMXStaggeredTileLayer": 1,
                "TMXTileLayer": 1,
                "TMXTileset": 1,
                "FadeIn": 1,
                "FadeInOut": 1,
                "FadeOut": 1,
                "MoveIn": 1,
                "MoveOut": 1,
                "ScaleIn": 1,
                "ScaleInOut": 1,
                "ScaleOut": 1,
                "Scroll": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "main",
            "file": "transitions\\Scroll.js",
            "line": 37,
            "description": "Creatine is a library that powers up the CreateJS suite! \n\nFocusing on Game Development, creatine adds several new features such as:\n\n<ul>\n  <li>Scene Management;</li>\n  <li>Scene Transitions;</li>\n  <li>Layout Management;</li>\n  <li>Canvas Resizing and other Display options;</li>\n  <li>Device Detection;</li>\n  <li>Other Visual Components, such as Flexible Bitmaps and Progress Bars</li>\n</ul>\n\nFeel free to use, modify, improve, make additions and suggestions.",
            "itemtype": "main"
        },
        "Transitions": {
            "name": "Transitions",
            "submodules": {},
            "classes": {
                "FadeIn": 1,
                "FadeInOut": 1,
                "FadeOut": 1,
                "MoveIn": 1,
                "MoveOut": 1,
                "ScaleIn": 1,
                "ScaleInOut": 1,
                "ScaleOut": 1,
                "Scroll": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "Creatine",
            "namespace": "",
            "file": "transitions\\Scroll.js",
            "line": 37,
            "description": "The FadeIn is a transition effect that fades in the new scene.\n\n<h4>Example</h4>\n\n    director.replace(\n        new MyScene(),\n        new creatine.transitions.FadeIn(\n            createjs.Ease.bounceOut, \n            400\n        )\n    )"
        }
    },
    "classes": {
        "DiscreteBar": {
            "name": "DiscreteBar",
            "shortname": "DiscreteBar",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Creatine",
            "namespace": "",
            "file": "display\\DiscreteBar.js",
            "line": 35,
            "description": "DiscreteBar is a progress bar that only handle discrete values. This is  \na simple and specific implementation of a progress bar, for a more \ngeneral version, consult the ProgressBar.\n\nIt can filled in 4 different directions, by using the parameter \n`direction`: <code>LEFT_TO_RIGHT, RIGHT_TO_LEFT, TOP_TO_BOTTOM, \nBOTTOM_TO_TOP</code>. \n\n<h4>Example</h4>\n\n    // Create the Director\n    var progress = new creatine.DiscreteBar(\n        image,                   // The image used to fill.\n        5,                       // The space between one image and other.\n        creatine.LEFT_TO_RIGHT   // The director.\n    )",
            "is_constructor": 1,
            "params": [
                {
                    "name": "image",
                    "description": "A bitmap or image that will be used to fill \n                      the progress bar.",
                    "type": "Bitmap|Image"
                },
                {
                    "name": "spacing",
                    "description": "The space between one image and other. Default \n                to 0.",
                    "type": "Number"
                },
                {
                    "name": "direction",
                    "description": "The filling direction. Default to \n                  `creatine.LEFT_TO_RIGHT`.",
                    "type": "Constant"
                }
            ]
        },
        "FlexBitmap": {
            "name": "FlexBitmap",
            "shortname": "FlexBitmap",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Creatine",
            "namespace": "",
            "file": "display\\FlexBitmap.js",
            "line": 35,
            "description": "FlexBitmap extends the createjs.Bitmap and adds the layout function to \nit, thus, FlexBitmap can resize itself to best fit its position and area\nin a layout manager, such as the BoxSizer and the GridSizer.",
            "extends": "createjs.Bitmap",
            "is_constructor": 1,
            "params": [
                {
                    "name": "imageOrUri",
                    "description": "The \n       source object or URI to an image to display. This can be either \n       an Image, Canvas, or Video object, or a string URI to an image \n       file to load and use. If it is a URI, a new Image object will be \n       constructed and assigned to the .image property.",
                    "type": "Image|HTMLCanvasElement|HTMLVideoElement|String"
                },
                {
                    "name": "scaleMode",
                    "description": "creatine.NOSCALE The scale mode.",
                    "type": "Boolean"
                }
            ]
        },
        "ProgressBar": {
            "name": "ProgressBar",
            "shortname": "ProgressBar",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Creatine",
            "namespace": "",
            "file": "display\\ProgressBar.js",
            "line": 35,
            "description": "ProgressBar is a progress bar that handle continuous values. It is \ndivided into three main types, which can be specified by `colorsOrImg` \nparameter:\n\n- ColorBar: by passing a string representing a color (e.g., '#0f3' or \n  'red'), the progress bar will be filled using this color.\n\n- GradientBar: by passing a list of colors (e.g., ['red', 'blue']), the \n  progress bar will be filled using a gradient passing through all \n  provided colors.\n\n- ImageBar: by passing a Bitmap or Image object, the progress bar will \n  be filled with using the provided image.\n\nA ProgressBar can filled in 4 different directions, by using the \nparameter `direction`: <code>LEFT_TO_RIGHT, RIGHT_TO_LEFT, \nTOP_TO_BOTTOM, BOTTOM_TO_TOP</code>. \n\n<h4>Example</h4>\n\n    // Create the Director\n    var progress = new creatine.ProgressBar(\n        'green',                     // The fill color\n        'black',                     // The background color\n        creatine.LEFT_TO_RIGHT       // The director\n        100,                         // The bar width\n        20,                          // The bar height\n        0,                           // The minimum value\n        100                          // The maximum value\n    )",
            "is_constructor": 1,
            "params": [
                {
                    "name": "colorsOrImg",
                    "description": "A color, list of colors \n                                   or bitmap that will be used to fill \n                                   the progress bar.",
                    "type": "String|Array|Bitmap|Image"
                },
                {
                    "name": "backgroundColor",
                    "description": "A string with the color of the bar \n                background. If `null`, the background will be \n                transparent. Default to `null`.",
                    "type": "String"
                },
                {
                    "name": "direction",
                    "description": "The filling direction. Default to \n                  `creatine.LEFT_TO_RIGHT`.",
                    "type": "Constant"
                },
                {
                    "name": "width",
                    "description": "The width of the bar. Default to 100.",
                    "type": "Number"
                },
                {
                    "name": "height",
                    "description": "The height of the bar. Default to 10.",
                    "type": "Number"
                },
                {
                    "name": "min",
                    "description": "The minimum value of the bar. Default to 0.",
                    "type": "Number"
                },
                {
                    "name": "max",
                    "description": "The maximum value of the bar. Default to 100.",
                    "type": "Number"
                }
            ]
        },
        "Component": {
            "name": "Component",
            "shortname": "Component",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Creatine",
            "namespace": "",
            "file": "ecs\\Component.js",
            "line": 35,
            "description": "The Component object is a container of data to be included on entities. \nFor example, a position component may store the <code>x</code> and \n<code>y</code> while a display component may store the image of the \nobject. Components usually does not have methods, but it can be \nincluded.\n\nWhen inheriting the Component class you must set the name variable, \npreferably on prototype (such as in the example below). Setting this \nvariable is obligatory and if not, entity will throw an error.\n\n<h4>Example: Creating a component</h4>\n\n    var PositionComponent = function() {};\n    PositionComponent.prototype = new creatine.Component();\n    PositionComponent.prototype.name = 'position';\n    PositionComponent.prototype.x = 0;\n    PositionComponent.prototype.y = 0;\n    \n    var entity = new creatine.Entity();\n    entity.addComponent(new PositionComponent());\n\n    \n<h4>Example: Using a component</h4>\n\n    var position = entity.getComponent('position');\n    position.x = 100;\n    position.y = 150;",
            "is_constructor": 1
        },
        "Entity": {
            "name": "Entity",
            "shortname": "Entity",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Creatine",
            "namespace": "",
            "file": "ecs\\Entity.js",
            "line": 38,
            "description": "Entity is a collection of Components, only consisting of an unique ID \nand a list of components.\n\n<h4>Example</h4>\n\n    var entity = new creatine.Entity();\n    entity.addComponent(new MyComponent1());\n    entity.addComponent(new MyComponent2());",
            "is_constructor": 1
        },
        "System": {
            "name": "System",
            "shortname": "System",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Creatine",
            "namespace": "",
            "file": "ecs\\System.js",
            "line": 35,
            "description": "Systems implement the game logic, such as collision detectition or\ngeneral physics control. Systems receive entities that are processed on \nthe <code>process</code> method.\n\n<h4>Example</h4>\n\n    // Considering that you have implemented the DraggingSystem\n    var system = new DraggingSystem();\n    system.process(entityList);",
            "is_constructor": 1
        },
        "Device": {
            "name": "Device",
            "shortname": "Device",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Creatine",
            "namespace": "",
            "file": "helpers\\Device.js",
            "line": 37,
            "description": "Class used to detect the device support and specification.",
            "params": [
                {
                    "name": "canvas",
                    "description": "A HTML canvas object.",
                    "type": "HTMLCanvasElement"
                }
            ],
            "is_constructor": 1
        },
        "Display": {
            "name": "Display",
            "shortname": "Display",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Creatine",
            "namespace": "",
            "file": "helpers\\Display.js",
            "line": 37,
            "description": "The Display class handles manual and automatic canvas scaling, \nfullscreen and orientation changes, and canvas properties.",
            "params": [
                {
                    "name": "canvas",
                    "description": "A HTML canvas object.",
                    "type": "HTMLCanvasElement"
                }
            ],
            "is_constructor": 1
        },
        "BoxSizer": {
            "name": "BoxSizer",
            "shortname": "BoxSizer",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Creatine",
            "namespace": "",
            "file": "layout\\BoxSizer.js",
            "line": 35,
            "description": "The BoxSizer is a simple layout manager that organizes its components \nhorizontally or vertically, depending on the <code>orientationat</code> \nparameter.\n\nBoxSizer was create to organize the game interface using a basic \ngeometry, e.g., in a single row or column. But several BoxSizers can be \nnested to create a more complex layout. Notice that, for regular grids, \nthe best option is the GridSizer.\n\nA BoxSizer requires an orientation parameter, which can be the constants\n<code>HORIZONTAL</code> or <code>HORIZONTAL</code>. It also requires a\nrectangle containing the information of how much space the sizer can use\nto expand and organize its elements.\n\nBy specifying the proportion parameter when adding a child, the BoxSizer\nwill expand to occupy all the available area. By doing this, the sizer \nalso can align the component using the anchor position. The anchor \nparameter can be specified using the following constants: <code>LEFT, \nRIGHT, TOP, BOTTOM, TOP_LEFT, TOP_RIGHT, BOTTOM_LEFT, BOTTOM_RIGHT, \nCENTER</code>.\n\nEach component can also have an individual border, by setting the border\nparameter when adding it to the sizer.\n\n\n<h4>Example</h4>\n\nA BoxSizer which grows horizontally and occupying all space of a canvas \ncan be created as:\n\n    var area = new createjs.Rectangle(0, 0, canvas.width, canvas.height);\n    var hbox = new creatine.BoxSizer(creatine.HORIZONTAL, area);\n\nAnd components can be added as:\n\n    hbox.add(my_text, 1, 0, creatine.CENTER);\n    hbox.add(my_sprite);\n    hbox.layout()\n\nIn the example above, the <code>my_sprite</code> component will be put \nat the right while <code>my_text</code> will be moved the the center of \nthe remaining area.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "orientation",
                    "description": "The orientation of the sizer (horizontal \n                  or vertical).",
                    "type": "Constant"
                },
                {
                    "name": "area",
                    "description": "A rectangle containing the usable area \n                            of the sizer.",
                    "type": "createjs.Rectangle"
                }
            ]
        },
        "GridSizer": {
            "name": "GridSizer",
            "shortname": "GridSizer",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Creatine",
            "namespace": "",
            "file": "layout\\GridSizer.js",
            "line": 35,
            "description": "GridSizer is a layout manager that organizes its components in a regular\ngrid. \n\nParameters <code>rows</code> and <code>cols</code> specify how many rows\nand columns the grid will have, respectively. All cells in the grid have\nthe same size. However, each cell can have an individual border, by \nsetting the border parameter when adding an object to the sizer.\n\nThe anchor parameter can be specified using the following constants: \n<code>LEFT, RIGHT, TOP, BOTTOM, TOP_LEFT, TOP_RIGHT, BOTTOM_LEFT, \nBOTTOM_RIGHT, CENTER</code>.\n\n<h4>Example</h4>\n\nA GridSizer which with 3 rows and 5 columns, and occupying all space of \na canvas can be created as:\n\n    var area = new createjs.Rectangle(0, 0, canvas.width, canvas.height);\n    var hbox = new creatine.GridSizer(3, 5, area);",
            "is_constructor": 1,
            "params": [
                {
                    "name": "rows",
                    "description": "The number of rows in the grid.",
                    "type": "Number"
                },
                {
                    "name": "cols",
                    "description": "The number of columns in the grid.",
                    "type": "Number"
                },
                {
                    "name": "area",
                    "description": "A rectangle containing the usable area \n                            of the sizer.",
                    "type": "createjs.Rectangle"
                }
            ]
        },
        "Director": {
            "name": "Director",
            "shortname": "Director",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Creatine",
            "namespace": "",
            "file": "scene\\Director.js",
            "line": 35,
            "description": "Director is the class that controls all the game scenes. This involves \nstoring the current scene that is running, receiving the next scene \nwhich will replace the current one, and applying the transition effect \nbetween the old and the new scenes. When the current scene is replaced \nby a new one, the Director will automatically remove the old scene from \nstage and add the new scene to it.\n\nOnly a single scene can be active at a time, however, Director can \nhandle a scene stack, allowing the addition of a new scene and keeping \nthe old one in the stack. This feature is specially useful to overlap \nscenes and creating, for example, a semi-transparent pause scene.\n\nIt is possible to specify a transition effect in any action of adding or\nremoving scenes, making possible to slide a new scene to the screen or \nto make the old scene fade away. To know more about transitions, consult\nthe module <code>creatine.transitions</code>.\n\n<h4>Example</h4>\n\n    // Create the Director\n    var director = new creatine.Director(stage);\n\n    // Adds the first scene\n    director.push(new MyCustomScene());\n\n    // Replaces the current scene\n    director.replace(new OtherCustomScene());",
            "is_constructor": 1,
            "params": [
                {
                    "name": "stage",
                    "description": "A <code>createjs.Stage</code> object.",
                    "type": "createjs.Stage"
                }
            ]
        },
        "Scene": {
            "name": "Scene",
            "shortname": "Scene",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Creatine",
            "namespace": "",
            "file": "scene\\Scene.js",
            "line": 35,
            "description": "A Scene is a general container for display objects.",
            "is_constructor": 1,
            "extends": "createjs.Container"
        },
        "TMXImageLayer": {
            "name": "TMXImageLayer",
            "shortname": "TMXImageLayer",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Creatine",
            "namespace": "",
            "file": "tmx\\TMXImageLayer.js",
            "line": 35,
            "description": "TMXImageLayer represents an image layer on TMX map.",
            "params": [
                {
                    "name": "map",
                    "description": "The map object.",
                    "type": "creatine.TMXMap"
                },
                {
                    "name": "data",
                    "description": "The data object (from tmx format).",
                    "type": "Object"
                }
            ],
            "extends": "createjs.Bitmap",
            "is_constructor": 1
        },
        "TMXIsometricTileLayer": {
            "name": "TMXIsometricTileLayer",
            "shortname": "TMXIsometricTileLayer",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Creatine",
            "namespace": "",
            "file": "tmx\\TMXIsometricTileLayer.js",
            "line": 35,
            "description": "TMXIsometricTileLayer represents a TileLayer in the TMX map.",
            "params": [
                {
                    "name": "map",
                    "description": "The map object.",
                    "type": "creatine.TMXMap"
                },
                {
                    "name": "data",
                    "description": "The data object (from tmx format).",
                    "type": "Object"
                }
            ],
            "extends": "creatine.TMXTileLayer",
            "is_constructor": 1
        },
        "TMXMap": {
            "name": "TMXMap",
            "shortname": "TMXMap",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Creatine",
            "namespace": "",
            "file": "tmx\\TMXMap.js",
            "line": 35,
            "description": "TMXMap is the class that handle tile maps in the TMX format, specified \nby the tile software Tiled. A TMX map is composed of one or more layers \n(tile layers, object layers or image layers) and one or more tilesets \n(image atlases). Creatine supports all types of layers and projections \ndescribed by the TMX specification: orthogonal, isometric and staggered.\n\nThe TMXMap receives a data object following the TMX specification. This \nis usually loaded from a json map. \n\n<h4>Example</h4>\n\nNotice that, TMXMap is a display object, inherited from \n<code>createjs.Container</code>, it means that, after loading the map \nyou can simply add it to the stage:\n\n    var map = new creatine.TMXMap(dataObject);\n    stage.addChild(map);\n\n<h4>Data Format</h4>\n\nIn relation to the map properties, the data must be in the following \nformat:\n\n    var data = {\n        'version'     : [Integer], // default to 1\n        'orientation' : [String],  // default to 'orthogonal'\n        'renderorder' : [String],  // default to 'right-down'\n        'height'      : [Integer], // default to 0\n        'width'       : [Integer], // default to 0\n        'tileheight'  : [Integer], // default to 0\n        'tilewidth'   : [Integer], // default to 0\n        'tilesets'    : [Array],   // mandatory\n        'layers'      : [Array],   // mandatory\n        'properties'  : [Object],\n    }\n\nConsult the specific classes for layer and tileset to known more about \nthe data format for these structures or consult the official TMX \ndescription: https://github.com/bjorn/tiled/wiki/TMX-Map-Format",
            "extends": "createjs.Container",
            "params": [
                {
                    "name": "data",
                    "description": "A data object describing the map.",
                    "type": "Object"
                }
            ],
            "is_constructor": 1
        },
        "TMXObjectLayer": {
            "name": "TMXObjectLayer",
            "shortname": "TMXObjectLayer",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Creatine",
            "namespace": "",
            "file": "tmx\\TMXObjectLayer.js",
            "line": 35,
            "description": "TMXObjectLayer represents an Object Group in TMX maps.",
            "params": [
                {
                    "name": "map",
                    "description": "The map object.",
                    "type": "creatine.TMXMap"
                },
                {
                    "name": "data",
                    "description": "The data object (from tmx format).",
                    "type": "Object"
                }
            ],
            "is_constructor": 1
        },
        "TMXOrthogonalTileLayer": {
            "name": "TMXOrthogonalTileLayer",
            "shortname": "TMXOrthogonalTileLayer",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Creatine",
            "namespace": "",
            "file": "tmx\\TMXOrthogonalTileLayer.js",
            "line": 35,
            "description": "TMXOrthogonalTileLayer represents a TileLayer in the TMX map.",
            "params": [
                {
                    "name": "map",
                    "description": "The map object.",
                    "type": "creatine.TMXMap"
                },
                {
                    "name": "data",
                    "description": "The data object (from tmx format).",
                    "type": "Object"
                }
            ],
            "extends": "creatine.TMXTileLayer",
            "is_constructor": 1
        },
        "TMXStaggeredTileLayer": {
            "name": "TMXStaggeredTileLayer",
            "shortname": "TMXStaggeredTileLayer",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Creatine",
            "namespace": "",
            "file": "tmx\\TMXStaggeredTileLayer.js",
            "line": 35,
            "description": "TMXStaggeredTileLayer represents a TileLayer in the TMX map.",
            "params": [
                {
                    "name": "map",
                    "description": "The map object.",
                    "type": "creatine.TMXMap"
                },
                {
                    "name": "data",
                    "description": "The data object (from tmx format).",
                    "type": "Object"
                }
            ],
            "extends": "creatine.TMXTileLayer",
            "is_constructor": 1
        },
        "TMXTileLayer": {
            "name": "TMXTileLayer",
            "shortname": "TMXTileLayer",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Creatine",
            "namespace": "",
            "file": "tmx\\TMXTileLayer.js",
            "line": 35,
            "description": "TMXTileLayer represents an abstract TileLayer in the TMX map. Creatine \nactually use this as base class to <code>TMXOrthogonalTileLayer</code>,\n<code>TMXIsometricTileLayer</code> and \n<code>TMXStaggeredTileLayer</code>. The difference among projections is \nperformed at layer-level, making new projections and extensions of the\ncurrent ones a lot simpler to be created. This also allows you to use\nmultiple projections to the same map (unfortunately, this isn't \nsupported by Tiled yet).",
            "params": [
                {
                    "name": "map",
                    "description": "The map object.",
                    "type": "creatine.TMXMap"
                },
                {
                    "name": "data",
                    "description": "The data object (from tmx format).",
                    "type": "Object"
                }
            ],
            "extends": "createjs.Container",
            "is_constructor": 1
        },
        "TMXTileset": {
            "name": "TMXTileset",
            "shortname": "TMXTileset",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Creatine",
            "namespace": "",
            "file": "tmx\\TMXTileset.js",
            "line": 35,
            "description": "TMXTileset represents a Tileset in the TMX map.\n\n<h4>Data Format</h4>\n\nIn relation to the tilesets properties, the data must be in the \nfollowing format:\n\n    var data = {\n        'firstgid'    : [Integer], // mandatory\n        'name'        : [String],  // mandatory\n        'image'       : [String],  // mandatory\n        'imagewidth'  : [Integer], // default to image.width\n        'imageheight' : [Integer], // default to image.height\n        'tilewidth'   : [Integer], // default to 32\n        'tileheight'  : [Integer], // default to 32\n        'spacing'     : [Integer], // default to 0\n        'margin'      : [Integer], // default to 0\n        'tileoffset'  : [Object],  // default to {x:0, y:0}\n        'properties'  : [Object],\n    }\n\nConsult the official TMX description to known more:\nhttps://github.com/bjorn/tiled/wiki/TMX-Map-Format",
            "params": [
                {
                    "name": "data",
                    "description": "The data object describing the tileset.",
                    "type": "Object"
                }
            ],
            "is_constructor": 1
        },
        "FadeIn": {
            "name": "FadeIn",
            "shortname": "FadeIn",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Creatine",
            "submodule": "Transitions",
            "namespace": "",
            "file": "transitions\\FadeIn.js",
            "line": 37,
            "description": "The FadeIn is a transition effect that fades in the new scene.\n\n<h4>Example</h4>\n\n    director.replace(\n        new MyScene(),\n        new creatine.transitions.FadeIn(\n            createjs.Ease.bounceOut, \n            400\n        )\n    )",
            "is_constructor": 1,
            "params": [
                {
                    "name": "ease",
                    "description": "An easing function from createjs.Ease (provided\n                  by TweenJS).",
                    "type": "Function"
                },
                {
                    "name": "time",
                    "description": "The transition time in milliseconds. Default to \n                400.",
                    "type": "Number"
                }
            ]
        },
        "FadeInOut": {
            "name": "FadeInOut",
            "shortname": "FadeInOut",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Creatine",
            "submodule": "Transitions",
            "namespace": "",
            "file": "transitions\\FadeInOut.js",
            "line": 37,
            "description": "The FadeInOut is a transition effect that fades out the current scene\nand fades in the new one.\n\n<h4>Example</h4>\n\n    director.replace(\n        new MyScene(),\n        new creatine.transitions.FadeInOut(\n            createjs.Ease.bounceOut,\n            400\n        )\n    )",
            "is_constructor": 1,
            "params": [
                {
                    "name": "ease",
                    "description": "An easing function from createjs.Ease (provided\n                  by TweenJS).",
                    "type": "Function"
                },
                {
                    "name": "time",
                    "description": "The transition time in milliseconds. Default to \n                1000.",
                    "type": "Number"
                }
            ]
        },
        "FadeOut": {
            "name": "FadeOut",
            "shortname": "FadeOut",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Creatine",
            "submodule": "Transitions",
            "namespace": "",
            "file": "transitions\\FadeOut.js",
            "line": 37,
            "description": "The FadeOut is a transition effect that fades out the current scene.\n\n<h4>Example</h4>\n\n    director.replace(\n        new MyScene(),\n        new creatine.transitions.FadeOut(\n            createjs.Ease.bounceOut, \n            400\n        )\n    )",
            "is_constructor": 1,
            "params": [
                {
                    "name": "ease",
                    "description": "An easing function from createjs.Ease (provided \n                  by TweenJS).",
                    "type": "Function"
                },
                {
                    "name": "time",
                    "description": "The transition time in milliseconds. Default to \n                400.",
                    "type": "Number"
                }
            ]
        },
        "MoveIn": {
            "name": "MoveIn",
            "shortname": "MoveIn",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Creatine",
            "submodule": "Transitions",
            "namespace": "",
            "file": "transitions\\MoveIn.js",
            "line": 37,
            "description": "The MoveIn is a transition effect that slides in the new scene to \nthe screen. MoveIn accepts the following direction constants: \n<code>LEFT, RIGHT, TOP, BOTTOM, TOP_LEFT, TOP_RIGHT, BOTTOM_LEFT, \nBOTTOM_RIGHT</code>.\n\n<h4>Example</h4>\n\n    director.replace(\n        new MyScene(),\n        new creatine.transitions.MoveIn(\n            creatine.LEFT,\n            createjs.Ease.bounceOut,\n            400\n        )\n    )",
            "is_constructor": 1,
            "params": [
                {
                    "name": "direction",
                    "description": "The direction from where the new scene will \n                  appear.",
                    "type": "Constant"
                },
                {
                    "name": "ease",
                    "description": "An easing function from createjs.Ease (provided \n                  by TweenJS).",
                    "type": "Function"
                },
                {
                    "name": "time",
                    "description": "The transition time in milliseconds. Default to \n                400.",
                    "type": "Number"
                }
            ]
        },
        "MoveOut": {
            "name": "MoveOut",
            "shortname": "MoveOut",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Creatine",
            "submodule": "Transitions",
            "namespace": "",
            "file": "transitions\\MoveOut.js",
            "line": 37,
            "description": "The MoveOut is a transition effect that slides out the current scene \nfrom the screen. MoveOut accepts the following direction constants: \n<code>LEFT, RIGHT, TOP, BOTTOM, TOP_LEFT, TOP_RIGHT, BOTTOM_LEFT, \nBOTTOM_RIGHT</code>.\n\n<h4>Example</h4>\n\n    director.replace(\n        new MyScene(),\n        new creatine.transitions.MoveOut(\n            creatine.LEFT,\n            createjs.Ease.bounceOut,\n            400\n        )\n    )",
            "is_constructor": 1,
            "params": [
                {
                    "name": "direction",
                    "description": "The direction to where the current scene  \n                  will leave.",
                    "type": "Constant"
                },
                {
                    "name": "ease",
                    "description": "An easing function from createjs.Ease (provided \n                  by TweenJS).",
                    "type": "Function"
                },
                {
                    "name": "time",
                    "description": "The transition time in milliseconds. Default to \n                400.",
                    "type": "Number"
                }
            ]
        },
        "ScaleIn": {
            "name": "ScaleIn",
            "shortname": "ScaleIn",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Creatine",
            "submodule": "Transitions",
            "namespace": "",
            "file": "transitions\\ScaleIn.js",
            "line": 37,
            "description": "The ScaleIn is a transition effect that scales in the new scene.\n\n<h4>Example</h4>\n\n    director.replace(\n        new MyScene(),\n        new creatine.transitions.ScaleIn(\n            createjs.Ease.bounceOut, \n            400\n        )\n    )",
            "is_constructor": 1,
            "params": [
                {
                    "name": "ease",
                    "description": "An easing function from createjs.Ease (provided \n                  by TweenJS).",
                    "type": "Function"
                },
                {
                    "name": "time",
                    "description": "The transition time in milliseconds. Default to\n                400.",
                    "type": "Number"
                }
            ]
        },
        "ScaleInOut": {
            "name": "ScaleInOut",
            "shortname": "ScaleInOut",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Creatine",
            "submodule": "Transitions",
            "namespace": "",
            "file": "transitions\\ScaleInOut.js",
            "line": 37,
            "description": "The ScaleInOut is a transition effect that scales out the current scene \nand scales in the new scene.\n\n<h4>Example</h4>\n\n    director.replace(\n        new MyScene(),\n        new creatine.transitions.ScaleInOut(\n            createjs.Ease.bounceOut, \n            400\n        )\n    )",
            "is_constructor": 1,
            "params": [
                {
                    "name": "ease",
                    "description": "An easing function from createjs.Ease (provided \n                  by TweenJS).",
                    "type": "Function"
                },
                {
                    "name": "time",
                    "description": "The transition time in milliseconds. Default to \n                1000.",
                    "type": "Number"
                }
            ]
        },
        "ScaleOut": {
            "name": "ScaleOut",
            "shortname": "ScaleOut",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Creatine",
            "submodule": "Transitions",
            "namespace": "",
            "file": "transitions\\ScaleOut.js",
            "line": 37,
            "description": "The ScaleOut is a transition effect that scales out the current scene.\n\n<h4>Example</h4>\n\n    director.replace(\n        new MyScene(),\n        new creatine.transitions.ScaleOut(\n            createjs.Ease.bounceOut, \n            400\n        )\n    )",
            "is_constructor": 1,
            "params": [
                {
                    "name": "ease",
                    "description": "An easing function from createjs.Ease (provided \n                  by TweenJS).",
                    "type": "Function"
                },
                {
                    "name": "time",
                    "description": "The transition time in milliseconds. Default to \n                400.",
                    "type": "Number"
                }
            ]
        },
        "Scroll": {
            "name": "Scroll",
            "shortname": "Scroll",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Creatine",
            "submodule": "Transitions",
            "namespace": "",
            "file": "transitions\\Scroll.js",
            "line": 37,
            "description": "The Scroll is a transition effect that slides out the current scene  \nwhile slides in the new scene. Scroll accepts the following direction \nconstants: <code>LEFT, RIGHT, TOP, BOTTOM</code>.\n\n<h4>Example</h4>\n\n    director.replace(\n        new MyScene(),\n        new creatine.transitions.Scroll(\n            creatine.LEFT,\n            createjs.Ease.bounceOut,\n            400\n        )\n    )",
            "is_constructor": 1,
            "params": [
                {
                    "name": "direction",
                    "description": "The direction to where the current scene \n                  will leave.",
                    "type": "Constant"
                },
                {
                    "name": "ease",
                    "description": "An easing function from createjs.Ease (provided \n                  by TweenJS).",
                    "type": "Function"
                },
                {
                    "name": "time",
                    "description": "The transition time in milliseconds. Default to \n                400.",
                    "type": "Number"
                }
            ]
        }
    },
    "classitems": [
        {
            "file": "display\\DiscreteBar.js",
            "line": 65,
            "description": "The bar filling direction (`LEFT_TO_RIGHT`, `RIGHT_TO_LEFT`, \n`TOP_TO_BOTTOM` or `BOTTOM_TO_TOP`).",
            "itemtype": "property",
            "name": "direction",
            "type": "{Constant}",
            "class": "DiscreteBar",
            "module": "Creatine"
        },
        {
            "file": "display\\DiscreteBar.js",
            "line": 74,
            "description": "The image which will be used to fill the bar.",
            "itemtype": "property",
            "name": "image",
            "type": "{Image}",
            "class": "DiscreteBar",
            "module": "Creatine"
        },
        {
            "file": "display\\DiscreteBar.js",
            "line": 86,
            "description": "The space between one image and other.",
            "itemtype": "property",
            "name": "spacing",
            "type": "{Image}",
            "class": "DiscreteBar",
            "module": "Creatine"
        },
        {
            "file": "display\\DiscreteBar.js",
            "line": 94,
            "description": "The current value of the progress bar.",
            "itemtype": "property",
            "name": "value",
            "type": "{Number}",
            "class": "DiscreteBar",
            "module": "Creatine"
        },
        {
            "file": "display\\DiscreteBar.js",
            "line": 105,
            "description": "Returns true or false indicating whether the bar would be visible if \ndrawn to a canvas. This does not account for whether it would be visible \nwithin the boundaries of the stage.",
            "itemtype": "method",
            "name": "isVisible",
            "access": "protected",
            "tagname": "",
            "class": "DiscreteBar",
            "module": "Creatine"
        },
        {
            "file": "display\\DiscreteBar.js",
            "line": 118,
            "description": "Draws the DiscreteBar into the specified context ignoring its visible, \nalpha, shadow, and transform. Returns true if the draw was handled \n(useful for overriding functionality).",
            "itemtype": "method",
            "name": "draw",
            "params": [
                {
                    "name": "ctx",
                    "description": "The canvas 2D context object to \n                                  draw into.",
                    "type": "CanvasRenderingContext2D"
                },
                {
                    "name": "ignoreCache",
                    "description": "Indicates whether the draw operation\n                                     should ignore any current cache. For\n                                     example, used for drawing the cache\n                                     (to prevent it from simply drawing \n                                     an existing cache back into itself).",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "DiscreteBar",
            "module": "Creatine"
        },
        {
            "file": "display\\FlexBitmap.js",
            "line": 53,
            "description": "Indicates the scaling mode of the image:\n\n<ul>\n    <li><code>creatine.STRETCH</code>: to fill the available area \n        ignoring the aspect ratio.</li>\n    <li><code>creatine.FIT</code>: to fill the available area without \n        overflow and keeping the aspect ratio.</li>\n    <li><code>creatine.FILL</code>: to fill the available area with \n        overflow and keeping the aspect ratio.</li>\n    <li><code>creatine.NOSCALE</code>: to keep the original size.\n    </li>\n</ul>",
            "itemtype": "property",
            "name": "scaleMode",
            "type": "{constant}",
            "class": "FlexBitmap",
            "module": "Creatine"
        },
        {
            "file": "display\\FlexBitmap.js",
            "line": 74,
            "description": "Resize this this image to fit the area.",
            "itemtype": "method",
            "name": "layout",
            "params": [
                {
                    "name": "area",
                    "description": "A rectangle containing the usable area\n                            of the bitmap.",
                    "type": "createjs.Rectangle"
                }
            ],
            "class": "FlexBitmap",
            "module": "Creatine"
        },
        {
            "file": "display\\FlexBitmap.js",
            "line": 107,
            "description": "Returns a rectangle representing this object's bounds after the resize.",
            "itemtype": "method",
            "name": "getBounds",
            "access": "protected",
            "tagname": "",
            "class": "FlexBitmap",
            "module": "Creatine"
        },
        {
            "file": "display\\ProgressBar.js",
            "line": 84,
            "description": "The bar type ('color', 'gradient' or 'image').",
            "itemtype": "property",
            "name": "type",
            "type": "{Sting}",
            "class": "ProgressBar",
            "module": "Creatine"
        },
        {
            "file": "display\\ProgressBar.js",
            "line": 92,
            "description": "The bar filling direction (`LEFT_TO_RIGHT`, `RIGHT_TO_LEFT`, \n`TOP_TO_BOTTOM` or `BOTTOM_TO_TOP`).",
            "itemtype": "property",
            "name": "direction",
            "type": "{Constant}",
            "class": "ProgressBar",
            "module": "Creatine"
        },
        {
            "file": "display\\ProgressBar.js",
            "line": 101,
            "description": "The image which will be used to fill the bar (if type = 'image').",
            "itemtype": "property",
            "name": "image",
            "type": "{Image}",
            "class": "ProgressBar",
            "module": "Creatine"
        },
        {
            "file": "display\\ProgressBar.js",
            "line": 109,
            "description": "The array with colors of the gradient to fill the bar (if type = \n'gradient').",
            "itemtype": "property",
            "name": "gradientColors",
            "type": "{Array}",
            "class": "ProgressBar",
            "module": "Creatine"
        },
        {
            "file": "display\\ProgressBar.js",
            "line": 118,
            "description": "The color to fill the bar (if type = 'color').",
            "itemtype": "property",
            "name": "fillColor",
            "type": "{String}",
            "class": "ProgressBar",
            "module": "Creatine"
        },
        {
            "file": "display\\ProgressBar.js",
            "line": 126,
            "description": "The background color.",
            "itemtype": "property",
            "name": "backgroundColor",
            "type": "{String}",
            "class": "ProgressBar",
            "module": "Creatine"
        },
        {
            "file": "display\\ProgressBar.js",
            "line": 134,
            "description": "The current value of the progress bar.",
            "itemtype": "property",
            "name": "value",
            "type": "{Number}",
            "class": "ProgressBar",
            "module": "Creatine"
        },
        {
            "file": "display\\ProgressBar.js",
            "line": 142,
            "description": "The minimum value of the progress bar.",
            "itemtype": "property",
            "name": "min",
            "type": "{Number}",
            "class": "ProgressBar",
            "module": "Creatine"
        },
        {
            "file": "display\\ProgressBar.js",
            "line": 150,
            "description": "The maximum value of the progress bar.",
            "itemtype": "property",
            "name": "max",
            "type": "{Number}",
            "class": "ProgressBar",
            "module": "Creatine"
        },
        {
            "file": "display\\ProgressBar.js",
            "line": 158,
            "description": "The width of the progress bar.",
            "itemtype": "property",
            "name": "width",
            "type": "{Number}",
            "class": "ProgressBar",
            "module": "Creatine"
        },
        {
            "file": "display\\ProgressBar.js",
            "line": 166,
            "description": "The height of the progress bar.",
            "itemtype": "property",
            "name": "height",
            "type": "{Number}",
            "class": "ProgressBar",
            "module": "Creatine"
        },
        {
            "file": "display\\ProgressBar.js",
            "line": 188,
            "description": "Initialization method.",
            "itemtype": "method",
            "name": "initialize",
            "params": [
                {
                    "name": "colorsOrImg",
                    "description": "A color, list of colors \n                                   or bitmap that will be used to fill \n                                   the progress bar.",
                    "type": "String|Array|Bitmap|Image"
                },
                {
                    "name": "backgroundColor",
                    "description": "A string with the color of the bar \n                background. If `null`, the background will be \n                transparent. Default to `null`.",
                    "type": "String"
                },
                {
                    "name": "direction",
                    "description": "The filling direction. Default to \n                  `creatine.LEFT_TO_RIGHT`.",
                    "type": "Constant"
                },
                {
                    "name": "width",
                    "description": "The width of the bar. Default to 100.",
                    "type": "Number"
                },
                {
                    "name": "height",
                    "description": "The height of the bar. Default to 10.",
                    "type": "Number"
                },
                {
                    "name": "min",
                    "description": "The minimum value of the bar. Default to 0.",
                    "type": "Number"
                },
                {
                    "name": "max",
                    "description": "The maximum value of the bar. Default to 100.",
                    "type": "Number"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "ProgressBar",
            "module": "Creatine"
        },
        {
            "file": "display\\ProgressBar.js",
            "line": 240,
            "description": "Returns true or false indicating whether the bar would be visible if \ndrawn to a canvas. This does not account for whether it would be visible \nwithin the boundaries of the stage.",
            "itemtype": "method",
            "name": "isVisible",
            "access": "protected",
            "tagname": "",
            "class": "ProgressBar",
            "module": "Creatine"
        },
        {
            "file": "display\\ProgressBar.js",
            "line": 257,
            "description": "Draws the ProgressBar into the specified context ignoring its visible, \nalpha, shadow, and transform. Returns true if the draw was handled \n(useful for overriding functionality).",
            "itemtype": "method",
            "name": "draw",
            "params": [
                {
                    "name": "ctx",
                    "description": "The canvas 2D context object to \n                                  draw into.",
                    "type": "CanvasRenderingContext2D"
                },
                {
                    "name": "ignoreCache",
                    "description": "Indicates whether the draw operation\n                                     should ignore any current cache. For\n                                     example, used for drawing the cache\n                                     (to prevent it from simply drawing \n                                     an existing cache back into itself).",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "ProgressBar",
            "module": "Creatine"
        },
        {
            "file": "ecs\\Component.js",
            "line": 69,
            "description": "The component name.",
            "itemtype": "property",
            "name": "name",
            "type": "{String}",
            "class": "Component",
            "module": "Creatine"
        },
        {
            "file": "ecs\\Entity.js",
            "line": 52,
            "description": "The Entity ID.",
            "itemtype": "property",
            "name": "id",
            "type": "{Striing}",
            "readonly": "",
            "class": "Entity",
            "module": "Creatine"
        },
        {
            "file": "ecs\\Entity.js",
            "line": 61,
            "description": "The component list.",
            "itemtype": "property",
            "name": "components",
            "type": "{Object}",
            "access": "private",
            "tagname": "",
            "class": "Entity",
            "module": "Creatine"
        },
        {
            "file": "ecs\\Entity.js",
            "line": 74,
            "description": "Initialization.",
            "itemtype": "method",
            "name": "_initialize",
            "access": "private",
            "tagname": "",
            "class": "Entity",
            "module": "Creatine"
        },
        {
            "file": "ecs\\Entity.js",
            "line": 91,
            "description": "Adds a new component to the entity. Notice that, if a component with the\nsame name is already included on the entity, the component will be \noverwritten.",
            "itemtype": "method",
            "name": "addComponent",
            "params": [
                {
                    "name": "object",
                    "description": "The component object (it must have a \n                <code>name</code> variable).",
                    "type": "Object"
                }
            ],
            "class": "Entity",
            "module": "Creatine"
        },
        {
            "file": "ecs\\Entity.js",
            "line": 111,
            "description": "Verifies if the entity contains a given component.",
            "itemtype": "method",
            "name": "hasComponent",
            "params": [
                {
                    "name": "name",
                    "description": "The name of component.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "Entity",
            "module": "Creatine"
        },
        {
            "file": "ecs\\Entity.js",
            "line": 122,
            "description": "Returns a component in the entity.",
            "itemtype": "method",
            "name": "getComponent",
            "params": [
                {
                    "name": "name",
                    "description": "The name of component.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "creatine.Component"
            },
            "class": "Entity",
            "module": "Creatine"
        },
        {
            "file": "ecs\\Entity.js",
            "line": 133,
            "description": "Remove a given component from this entity.",
            "itemtype": "method",
            "name": "removeComponent",
            "params": [
                {
                    "name": "name",
                    "description": "The name of component.",
                    "type": "String"
                }
            ],
            "class": "Entity",
            "module": "Creatine"
        },
        {
            "file": "ecs\\System.js",
            "line": 53,
            "description": "Override this method in order to implemement the system logic.",
            "itemtype": "method",
            "name": "process",
            "class": "System",
            "module": "Creatine"
        },
        {
            "file": "helpers\\Device.js",
            "line": 49,
            "description": "The canvas element.",
            "itemtype": "property",
            "name": "canvas",
            "type": "{HTMLCanvasElement}",
            "access": "private",
            "tagname": "",
            "class": "Device",
            "module": "Creatine"
        },
        {
            "file": "helpers\\Device.js",
            "line": 62,
            "description": "Is running desktop?",
            "itemtype": "property",
            "name": "desktop",
            "type": "Boolean",
            "readonly": "",
            "class": "Device",
            "module": "Creatine"
        },
        {
            "file": "helpers\\Device.js",
            "line": 75,
            "description": "iOS Is running on iOS?",
            "itemtype": "property",
            "name": "iOS",
            "type": "Boolean",
            "readonly": "",
            "class": "Device",
            "module": "Creatine"
        },
        {
            "file": "helpers\\Device.js",
            "line": 84,
            "description": "Is running on android?",
            "itemtype": "property",
            "name": "android",
            "type": "Boolean",
            "readonly": "",
            "class": "Device",
            "module": "Creatine"
        },
        {
            "file": "helpers\\Device.js",
            "line": 93,
            "description": "Is running on chromeOS?",
            "itemtype": "property",
            "name": "chromeOS",
            "type": "Boolean",
            "readonly": "",
            "class": "Device",
            "module": "Creatine"
        },
        {
            "file": "helpers\\Device.js",
            "line": 102,
            "description": "Is running on linux?",
            "itemtype": "property",
            "name": "linux",
            "type": "Boolean",
            "readonly": "",
            "class": "Device",
            "module": "Creatine"
        },
        {
            "file": "helpers\\Device.js",
            "line": 111,
            "description": "Is running on macOS?",
            "itemtype": "property",
            "name": "macOS",
            "type": "Boolean",
            "readonly": "",
            "class": "Device",
            "module": "Creatine"
        },
        {
            "file": "helpers\\Device.js",
            "line": 120,
            "description": "Is running on windows?",
            "itemtype": "property",
            "name": "windows",
            "type": "Boolean",
            "readonly": "",
            "class": "Device",
            "module": "Creatine"
        },
        {
            "file": "helpers\\Device.js",
            "line": 129,
            "description": "Is running on a Windows Phone?",
            "itemtype": "property",
            "name": "windowsPhone",
            "type": "Boolean",
            "readonly": "",
            "class": "Device",
            "module": "Creatine"
        },
        {
            "file": "helpers\\Device.js",
            "line": 142,
            "description": "Is canvas available?",
            "itemtype": "property",
            "name": "canvas",
            "type": "Boolean",
            "readonly": "",
            "class": "Device",
            "module": "Creatine"
        },
        {
            "file": "helpers\\Device.js",
            "line": 151,
            "description": "Is file available?",
            "itemtype": "property",
            "name": "file",
            "type": "Boolean",
            "readonly": "",
            "class": "Device",
            "module": "Creatine"
        },
        {
            "file": "helpers\\Device.js",
            "line": 160,
            "description": "Is fileSystem available?",
            "itemtype": "property",
            "name": "fileSystem",
            "type": "Boolean",
            "readonly": "",
            "class": "Device",
            "module": "Creatine"
        },
        {
            "file": "helpers\\Device.js",
            "line": 169,
            "description": "Is localStorage available?",
            "itemtype": "property",
            "name": "localStorage",
            "type": "Boolean",
            "readonly": "",
            "class": "Device",
            "module": "Creatine"
        },
        {
            "file": "helpers\\Device.js",
            "line": 178,
            "description": "Is webGL available?",
            "itemtype": "property",
            "name": "webGL",
            "type": "Boolean",
            "readonly": "",
            "class": "Device",
            "module": "Creatine"
        },
        {
            "file": "helpers\\Device.js",
            "line": 187,
            "description": "Is worker available?",
            "itemtype": "property",
            "name": "worker",
            "type": "Boolean",
            "readonly": "",
            "class": "Device",
            "module": "Creatine"
        },
        {
            "file": "helpers\\Device.js",
            "line": 196,
            "description": "Is touch available?",
            "itemtype": "property",
            "name": "touch",
            "type": "Boolean",
            "readonly": "",
            "class": "Device",
            "module": "Creatine"
        },
        {
            "file": "helpers\\Device.js",
            "line": 205,
            "description": "Is mspointer available?",
            "itemtype": "property",
            "name": "mspointer",
            "type": "Boolean",
            "readonly": "",
            "class": "Device",
            "module": "Creatine"
        },
        {
            "file": "helpers\\Device.js",
            "line": 214,
            "description": "Is css3D available?",
            "itemtype": "property",
            "name": "css3D",
            "type": "Boolean",
            "readonly": "",
            "class": "Device",
            "module": "Creatine"
        },
        {
            "file": "helpers\\Device.js",
            "line": 223,
            "description": "Is pointerLock available?",
            "itemtype": "property",
            "name": "pointerLock",
            "type": "Boolean",
            "readonly": "",
            "class": "Device",
            "module": "Creatine"
        },
        {
            "file": "helpers\\Device.js",
            "line": 232,
            "description": "Is typedArray available?",
            "itemtype": "property",
            "name": "typedArray",
            "type": "Boolean",
            "readonly": "",
            "class": "Device",
            "module": "Creatine"
        },
        {
            "file": "helpers\\Device.js",
            "line": 241,
            "description": "Is vibration available?",
            "itemtype": "property",
            "name": "vibration",
            "type": "Boolean",
            "readonly": "",
            "class": "Device",
            "module": "Creatine"
        },
        {
            "file": "helpers\\Device.js",
            "line": 250,
            "description": "Is getUserMedia available?",
            "itemtype": "property",
            "name": "getUserMedia",
            "type": "Boolean",
            "readonly": "",
            "class": "Device",
            "module": "Creatine"
        },
        {
            "file": "helpers\\Device.js",
            "line": 259,
            "description": "Is quirksMode available?",
            "itemtype": "property",
            "name": "quirksMode",
            "type": "Boolean",
            "readonly": "",
            "class": "Device",
            "module": "Creatine"
        },
        {
            "file": "helpers\\Device.js",
            "line": 271,
            "description": "Is the game running under Ejecta?",
            "itemtype": "property",
            "name": "ejecta",
            "type": "Boolean",
            "readonly": "",
            "class": "Device",
            "module": "Creatine"
        },
        {
            "file": "helpers\\Device.js",
            "line": 280,
            "description": "Is the game running under CocoonJS?",
            "itemtype": "property",
            "name": "cocoonJS",
            "type": "Boolean",
            "readonly": "",
            "class": "Device",
            "module": "Creatine"
        },
        {
            "file": "helpers\\Device.js",
            "line": 289,
            "description": "Set to true if running as a WebApp, i.e. within a WebView.",
            "itemtype": "property",
            "name": "webApp",
            "type": "Boolean",
            "readonly": "",
            "class": "Device",
            "module": "Creatine"
        },
        {
            "file": "helpers\\Device.js",
            "line": 298,
            "description": "Set to true if running in Arora.",
            "itemtype": "property",
            "name": "arora",
            "type": "Boolean",
            "readonly": "",
            "class": "Device",
            "module": "Creatine"
        },
        {
            "file": "helpers\\Device.js",
            "line": 307,
            "description": "Set to true if running in Chrome.",
            "itemtype": "property",
            "name": "chrome",
            "type": "Boolean",
            "readonly": "",
            "class": "Device",
            "module": "Creatine"
        },
        {
            "file": "helpers\\Device.js",
            "line": 316,
            "description": "Set to true if running in Epiphany.",
            "itemtype": "property",
            "name": "epiphany",
            "type": "Boolean",
            "readonly": "",
            "class": "Device",
            "module": "Creatine"
        },
        {
            "file": "helpers\\Device.js",
            "line": 325,
            "description": "Set to true if running in Firefox.",
            "itemtype": "property",
            "name": "firefox",
            "type": "Boolean",
            "readonly": "",
            "class": "Device",
            "module": "Creatine"
        },
        {
            "file": "helpers\\Device.js",
            "line": 334,
            "description": "Set to true if running in Internet Explorer.",
            "itemtype": "property",
            "name": "ie",
            "type": "Boolean",
            "readonly": "",
            "class": "Device",
            "module": "Creatine"
        },
        {
            "file": "helpers\\Device.js",
            "line": 343,
            "description": "If running in Internet Explorer this will contain the major version \nnumber. Beyond IE10 you should use Device.trident and \nDevice.tridentVersion.",
            "itemtype": "property",
            "name": "ieVersion",
            "type": "Boolean",
            "readonly": "",
            "class": "Device",
            "module": "Creatine"
        },
        {
            "file": "helpers\\Device.js",
            "line": 354,
            "description": "Set to true if running a Trident version of Internet Explorer (IE11+).",
            "itemtype": "property",
            "name": "trident",
            "type": "Boolean",
            "readonly": "",
            "class": "Device",
            "module": "Creatine"
        },
        {
            "file": "helpers\\Device.js",
            "line": 363,
            "description": "If running in Internet Explorer 11 this will contain the major version\nnumber.",
            "itemtype": "property",
            "name": "tridentVersion",
            "type": "Boolean",
            "readonly": "",
            "class": "Device",
            "module": "Creatine"
        },
        {
            "file": "helpers\\Device.js",
            "line": 373,
            "description": "Set to true if running in Mobile Safari.",
            "itemtype": "property",
            "name": "mobileSafari",
            "type": "Boolean",
            "readonly": "",
            "class": "Device",
            "module": "Creatine"
        },
        {
            "file": "helpers\\Device.js",
            "line": 382,
            "description": "Set to true if running in Midori.",
            "itemtype": "property",
            "name": "midori",
            "type": "Boolean",
            "readonly": "",
            "class": "Device",
            "module": "Creatine"
        },
        {
            "file": "helpers\\Device.js",
            "line": 391,
            "description": "Set to true if running in Opera.",
            "itemtype": "property",
            "name": "opera",
            "type": "Boolean",
            "readonly": "",
            "class": "Device",
            "module": "Creatine"
        },
        {
            "file": "helpers\\Device.js",
            "line": 400,
            "description": "Set to true if running in Safari.",
            "itemtype": "property",
            "name": "safari",
            "type": "Boolean",
            "readonly": "",
            "class": "Device",
            "module": "Creatine"
        },
        {
            "file": "helpers\\Device.js",
            "line": 409,
            "description": "Set to true if running in the Silk browser (as used on the Amazon \nKindle).",
            "itemtype": "property",
            "name": "silk",
            "type": "Boolean",
            "readonly": "",
            "class": "Device",
            "module": "Creatine"
        },
        {
            "file": "helpers\\Device.js",
            "line": 422,
            "description": "Are Audio tags available?",
            "itemtype": "property",
            "name": "audioData",
            "type": "Boolean",
            "readonly": "",
            "class": "Device",
            "module": "Creatine"
        },
        {
            "file": "helpers\\Device.js",
            "line": 431,
            "description": "Is the WebAudio API available?",
            "itemtype": "property",
            "name": "webAudio",
            "type": "Boolean",
            "readonly": "",
            "class": "Device",
            "module": "Creatine"
        },
        {
            "file": "helpers\\Device.js",
            "line": 440,
            "description": "Can this device play ogg files?",
            "itemtype": "property",
            "name": "ogg",
            "type": "Boolean",
            "readonly": "",
            "class": "Device",
            "module": "Creatine"
        },
        {
            "file": "helpers\\Device.js",
            "line": 449,
            "description": "Can this device play opus files?",
            "itemtype": "property",
            "name": "opus",
            "type": "Boolean",
            "readonly": "",
            "class": "Device",
            "module": "Creatine"
        },
        {
            "file": "helpers\\Device.js",
            "line": 458,
            "description": "Can this device play mp3 files?",
            "itemtype": "property",
            "name": "mp3",
            "type": "Boolean",
            "readonly": "",
            "class": "Device",
            "module": "Creatine"
        },
        {
            "file": "helpers\\Device.js",
            "line": 467,
            "description": "Can this device play wav files?",
            "itemtype": "property",
            "name": "wav",
            "type": "Boolean",
            "readonly": "",
            "class": "Device",
            "module": "Creatine"
        },
        {
            "file": "helpers\\Device.js",
            "line": 476,
            "description": "Can this device play m4a files?",
            "itemtype": "property",
            "name": "m4a",
            "type": "Boolean",
            "readonly": "",
            "class": "Device",
            "module": "Creatine"
        },
        {
            "file": "helpers\\Device.js",
            "line": 485,
            "description": "Can this device play webm files?",
            "itemtype": "property",
            "name": "webm",
            "type": "Boolean",
            "readonly": "",
            "class": "Device",
            "module": "Creatine"
        },
        {
            "file": "helpers\\Device.js",
            "line": 497,
            "description": "Is running on iPhone?",
            "itemtype": "property",
            "name": "iPhone",
            "type": "Boolean",
            "readonly": "",
            "class": "Device",
            "module": "Creatine"
        },
        {
            "file": "helpers\\Device.js",
            "line": 506,
            "description": "Is running on iPhone 4?",
            "itemtype": "property",
            "name": "iPhone4",
            "type": "Boolean",
            "readonly": "",
            "class": "Device",
            "module": "Creatine"
        },
        {
            "file": "helpers\\Device.js",
            "line": 515,
            "description": "Is running on iPad?",
            "itemtype": "property",
            "name": "iPhone4",
            "type": "Boolean",
            "readonly": "",
            "class": "Device",
            "module": "Creatine"
        },
        {
            "file": "helpers\\Device.js",
            "line": 524,
            "description": "PixelRatio of the host device?",
            "itemtype": "property",
            "name": "pixelRatio",
            "type": "Boolean",
            "readonly": "",
            "class": "Device",
            "module": "Creatine"
        },
        {
            "file": "helpers\\Device.js",
            "line": 533,
            "description": "Is the device big or little endian? (only detected if the browser \nsupports TypedArrays).",
            "itemtype": "property",
            "name": "littleEndian",
            "type": "Boolean",
            "readonly": "",
            "class": "Device",
            "module": "Creatine"
        },
        {
            "file": "helpers\\Device.js",
            "line": 543,
            "description": "Does the browser support the Full Screen API?",
            "itemtype": "property",
            "name": "fullscreen",
            "type": "Boolean",
            "readonly": "",
            "class": "Device",
            "module": "Creatine"
        },
        {
            "file": "helpers\\Device.js",
            "line": 552,
            "description": "Initialization method.",
            "itemtype": "method",
            "name": "initialize",
            "params": [
                {
                    "name": "canvas",
                    "description": "The HTML canvas element.",
                    "type": "HTMLCanvasElement"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "Device",
            "module": "Creatine"
        },
        {
            "file": "helpers\\Device.js",
            "line": 571,
            "description": "Check which OS is game running on.",
            "itemtype": "method",
            "name": "_checkOS",
            "access": "private",
            "tagname": "",
            "class": "Device",
            "module": "Creatine"
        },
        {
            "file": "helpers\\Device.js",
            "line": 613,
            "description": "Check HTML5 features of the host environment.",
            "itemtype": "method",
            "name": "_checkFeatures",
            "access": "private",
            "tagname": "",
            "class": "Device",
            "module": "Creatine"
        },
        {
            "file": "helpers\\Device.js",
            "line": 651,
            "description": "Check what browser is game running in.",
            "itemtype": "method",
            "name": "_checkFeatures",
            "access": "private",
            "tagname": "",
            "class": "Device",
            "module": "Creatine"
        },
        {
            "file": "helpers\\Device.js",
            "line": 712,
            "description": "Check audio support.",
            "itemtype": "method",
            "name": "_checkAudio",
            "access": "private",
            "tagname": "",
            "class": "Device",
            "module": "Creatine"
        },
        {
            "file": "helpers\\Device.js",
            "line": 757,
            "description": "Check PixelRatio, iOS device, Vibration API, ArrayBuffers and endianess.",
            "itemtype": "method",
            "name": "_checkDevice",
            "access": "private",
            "tagname": "",
            "class": "Device",
            "module": "Creatine"
        },
        {
            "file": "helpers\\Device.js",
            "line": 785,
            "description": "Check whether the host environment support 3D CSS.",
            "itemtype": "method",
            "name": "_checkCSS3D",
            "access": "private",
            "tagname": "",
            "class": "Device",
            "module": "Creatine"
        },
        {
            "file": "helpers\\Device.js",
            "line": 816,
            "description": "Checks for support of the Full Screen API.",
            "itemtype": "method",
            "name": "_checkFullscreen",
            "access": "private",
            "tagname": "",
            "class": "Device",
            "module": "Creatine"
        },
        {
            "file": "helpers\\Device.js",
            "line": 842,
            "description": "Check whether the host environment can play audio. Return True if the\ngiven file type is supported by the browser, otherwise false.",
            "itemtype": "method",
            "name": "canPlayAudio",
            "params": [
                {
                    "name": "type",
                    "description": "- One of 'mp3, 'ogg', 'm4a', 'wav', 'webm'.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Boolean"
            },
            "class": "Device",
            "module": "Creatine"
        },
        {
            "file": "helpers\\Display.js",
            "line": 46,
            "description": "The canvas element.",
            "itemtype": "property",
            "name": "canvas",
            "type": "{HTMLCanvasElement}",
            "access": "private",
            "tagname": "",
            "class": "Display",
            "module": "Creatine"
        },
        {
            "file": "helpers\\Display.js",
            "line": 55,
            "description": "The current canvas width.",
            "itemtype": "property",
            "name": "width",
            "type": "{Number}",
            "readonly": "",
            "class": "Display",
            "module": "Creatine"
        },
        {
            "file": "helpers\\Display.js",
            "line": 64,
            "description": "The current canvas height.",
            "itemtype": "property",
            "name": "height",
            "type": "{Number}",
            "readonly": "",
            "class": "Display",
            "module": "Creatine"
        },
        {
            "file": "helpers\\Display.js",
            "line": 73,
            "description": "The original canvas width.",
            "itemtype": "property",
            "name": "sourceWidth",
            "type": "{Number}",
            "readonly": "",
            "class": "Display",
            "module": "Creatine"
        },
        {
            "file": "helpers\\Display.js",
            "line": 82,
            "description": "The original canvas height.",
            "itemtype": "property",
            "name": "sourceHeight",
            "type": "{Number}",
            "readonly": "",
            "class": "Display",
            "module": "Creatine"
        },
        {
            "file": "helpers\\Display.js",
            "line": 91,
            "description": "The minimum width of the canvas, used when canvas is resized.",
            "itemtype": "property",
            "name": "minWidth",
            "type": "{Number}",
            "readonly": "",
            "class": "Display",
            "module": "Creatine"
        },
        {
            "file": "helpers\\Display.js",
            "line": 100,
            "description": "The minimum height of the canvas, used when canvas is resized.",
            "itemtype": "property",
            "name": "minHeight",
            "type": "{Number}",
            "readonly": "",
            "class": "Display",
            "module": "Creatine"
        },
        {
            "file": "helpers\\Display.js",
            "line": 109,
            "description": "The maximum width of the canvas, used when canvas is resized.",
            "itemtype": "property",
            "name": "maxWidth",
            "type": "{Number}",
            "readonly": "",
            "class": "Display",
            "module": "Creatine"
        },
        {
            "file": "helpers\\Display.js",
            "line": 118,
            "description": "The maximum height of the canvas, used when canvas is resized.",
            "itemtype": "property",
            "name": "maxHeight",
            "type": "{Number}",
            "readonly": "",
            "class": "Display",
            "module": "Creatine"
        },
        {
            "file": "helpers\\Display.js",
            "line": 127,
            "description": "The scale mode of the canvas. Set this to use the automatic \nresizing. Accepted modes are:\n\n<ul>\n    <li><code>creatine.FIT</code>: scale the canvas to fit the \n        available space, without exceeding it and respecting the \n        aspect ratio.</li>\n    <li><code>creatine.STRETCH</code>: scale the canvas to fit the \n        available space, without exceeding it but does not respect \n        the aspect ratio.</li>\n    <li><code>creatine.NOSCALE</code>: (default) keeps the original \n        size of the canvas.</li>\n</ul>",
            "itemtype": "property",
            "name": "scaleMode",
            "type": "{Constant}",
            "class": "Display",
            "module": "Creatine"
        },
        {
            "file": "helpers\\Display.js",
            "line": 147,
            "description": "The orientation of the <strong>window</strong>.",
            "itemtype": "property",
            "name": "orientation",
            "type": "{Number}",
            "readonly": "",
            "class": "Display",
            "module": "Creatine"
        },
        {
            "file": "helpers\\Display.js",
            "line": 156,
            "description": "If <code>true</code>, the canvas will be resized using the CSS \nstyle.",
            "itemtype": "property",
            "name": "scaleUsingCSS",
            "type": "{Boolean}",
            "class": "Display",
            "module": "Creatine"
        },
        {
            "file": "helpers\\Display.js",
            "line": 165,
            "description": "Same as <code>scaleMode</code> but for fullscreen mode.",
            "itemtype": "property",
            "name": "fullscreenScaleMode",
            "type": "{Constant}",
            "class": "Display",
            "module": "Creatine"
        },
        {
            "file": "helpers\\Display.js",
            "line": 173,
            "description": "The command to call the fullscreen.",
            "itemtype": "property",
            "name": "_fullscreenRequest",
            "type": "{String}",
            "access": "private",
            "tagname": "",
            "class": "Display",
            "module": "Creatine"
        },
        {
            "file": "helpers\\Display.js",
            "line": 182,
            "description": "The last width before entering on fullscreen mode.",
            "itemtype": "property",
            "name": "_width",
            "type": "{Number}",
            "access": "private",
            "tagname": "",
            "class": "Display",
            "module": "Creatine"
        },
        {
            "file": "helpers\\Display.js",
            "line": 191,
            "description": "The last height before entering on fullscreen mode.",
            "itemtype": "property",
            "name": "_height",
            "type": "{Number}",
            "access": "private",
            "tagname": "",
            "class": "Display",
            "module": "Creatine"
        },
        {
            "file": "helpers\\Display.js",
            "line": 204,
            "description": "Initialization method.",
            "itemtype": "method",
            "name": "initialize",
            "params": [
                {
                    "name": "canvas",
                    "description": "The HTML canvas element.",
                    "type": "HTMLCanvasElement"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Display",
            "module": "Creatine"
        },
        {
            "file": "helpers\\Display.js",
            "line": 270,
            "description": "Refresh the display, scaling the canvas if necessary.",
            "itemtype": "method",
            "name": "refresh",
            "class": "Display",
            "module": "Creatine"
        },
        {
            "file": "helpers\\Display.js",
            "line": 288,
            "description": "Sets the Image Smoothing property on the given context. Set to false to \ndisable image smoothing. By default browsers have image smoothing \nenabled, which isn't always what you visually want, especially when \nusing pixel art in a game. Note that this sets the property on the \ncontext itself, so that any image drawn to the context will be affected.\nThis sets the property across all current browsers but support is patchy\non earlier browsers, especially on mobile.",
            "itemtype": "method",
            "name": "setSmoothingEnabled",
            "params": [
                {
                    "name": "value",
                    "description": "- If set to true it will enable image smoothing, \n       false will disable it.",
                    "type": "Boolean"
                }
            ],
            "class": "Display",
            "module": "Creatine"
        },
        {
            "file": "helpers\\Display.js",
            "line": 311,
            "description": "Sets the CSS image-rendering property on the given canvas to be 'crisp' \n(aka 'optimize contrast on webkit'). Note that if this doesn't given the\ndesired result then see the setSmoothingEnabled.",
            "itemtype": "method",
            "name": "setImageRenderingCrisp",
            "params": [
                {
                    "name": "canvas",
                    "description": "The canvas to set image-rendering \n       crisp on.",
                    "type": "HTMLCanvasElement"
                }
            ],
            "class": "Display",
            "module": "Creatine"
        },
        {
            "file": "helpers\\Display.js",
            "line": 331,
            "description": "Sets the CSS image-rendering property on the given canvas to be \n'bicubic' (aka 'auto'). Note that if this doesn't given the desired \nresult then see the setSmoothingEnabled method.",
            "itemtype": "method",
            "name": "setImageRenderingBicubic",
            "class": "Display",
            "module": "Creatine"
        },
        {
            "file": "helpers\\Display.js",
            "line": 345,
            "description": "Sets the user-select property on the canvas style. Can be used to \ndisable default browser selection actions.",
            "itemtype": "method",
            "name": "setUserSelect",
            "params": [
                {
                    "name": "value",
                    "description": "The touch action to set. Defaults to 'none'.",
                    "type": "String"
                }
            ],
            "class": "Display",
            "module": "Creatine"
        },
        {
            "file": "helpers\\Display.js",
            "line": 365,
            "description": "Sets the touch-action property on the canvas style. Can be used to \ndisable default browser touch actions.",
            "itemtype": "method",
            "name": "setTouchAction",
            "params": [
                {
                    "name": "value",
                    "description": "The touch action to set. Defaults to 'none'.",
                    "type": "String"
                }
            ],
            "class": "Display",
            "module": "Creatine"
        },
        {
            "file": "helpers\\Display.js",
            "line": 381,
            "description": "Sets the background color behind the canvas. This changes the canvas \nstyle property.",
            "itemtype": "method",
            "name": "setBackgroundColor",
            "params": [
                {
                    "name": "color",
                    "description": "The color to set. Can be in the format \n       'rgb(r,g,b)', or '#RRGGBB' or any valid CSS color.",
                    "type": "String"
                }
            ],
            "class": "Display",
            "module": "Creatine"
        },
        {
            "file": "helpers\\Display.js",
            "line": 394,
            "description": "Sets the background image behind the canvas. This changes the canvas \nstyle property.",
            "itemtype": "method",
            "name": "setBackgroundImage",
            "params": [
                {
                    "name": "image",
                    "description": "The image path.",
                    "type": "String"
                }
            ],
            "class": "Display",
            "module": "Creatine"
        },
        {
            "file": "helpers\\Display.js",
            "line": 410,
            "description": "Perform the resize, using CSS if enabled.",
            "itemtype": "method",
            "name": "_setSize",
            "params": [
                {
                    "name": "width",
                    "description": "The target width.",
                    "type": "Number"
                },
                {
                    "name": "height",
                    "description": "The target height.",
                    "type": "Number"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Display",
            "module": "Creatine"
        },
        {
            "file": "helpers\\Display.js",
            "line": 431,
            "description": "Clip the width using the minWidth and maxWidth information.",
            "itemtype": "method",
            "name": "_clipWidth",
            "params": [
                {
                    "name": "width",
                    "description": "The target width.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "The clipped width.",
                "type": "Number"
            },
            "access": "private",
            "tagname": "",
            "class": "Display",
            "module": "Creatine"
        },
        {
            "file": "helpers\\Display.js",
            "line": 450,
            "description": "Clip the height using the minWidth and maxWidth information.",
            "itemtype": "method",
            "name": "_clipHeight",
            "params": [
                {
                    "name": "height",
                    "description": "The target height.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "The clipped height.",
                "type": "Number"
            },
            "access": "private",
            "tagname": "",
            "class": "Display",
            "module": "Creatine"
        },
        {
            "file": "helpers\\Display.js",
            "line": 469,
            "description": "Resize the canvas to a custom size. This method override the original \nsize.",
            "itemtype": "method",
            "name": "resizeCustom",
            "params": [
                {
                    "name": "width",
                    "description": "The target width.",
                    "type": "Number"
                },
                {
                    "name": "height",
                    "description": "The target height.",
                    "type": "Number"
                }
            ],
            "class": "Display",
            "module": "Creatine"
        },
        {
            "file": "helpers\\Display.js",
            "line": 484,
            "description": "Stretch the canvas to fit the window, without respect the aspect ratio.",
            "itemtype": "method",
            "name": "resizeStretch",
            "class": "Display",
            "module": "Creatine"
        },
        {
            "file": "helpers\\Display.js",
            "line": 496,
            "description": "Fit the canvas to the window size, respecting the aspect ratio.",
            "itemtype": "method",
            "name": "resizeFit",
            "class": "Display",
            "module": "Creatine"
        },
        {
            "file": "helpers\\Display.js",
            "line": 513,
            "description": "Revert the canvas to its original size",
            "itemtype": "method",
            "name": "resizeOriginal",
            "class": "Display",
            "module": "Creatine"
        },
        {
            "file": "helpers\\Display.js",
            "line": 528,
            "description": "Returns true if the browser dimensions match a portrait display.",
            "itemtype": "method",
            "name": "isPortrait",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "Display",
            "module": "Creatine"
        },
        {
            "file": "helpers\\Display.js",
            "line": 538,
            "description": "Returns true if the browser dimensions match a landscape display.",
            "itemtype": "method",
            "name": "isLandscape",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "Display",
            "module": "Creatine"
        },
        {
            "file": "helpers\\Display.js",
            "line": 551,
            "description": "Returns true if the browser is in full screen mode, otherwise false.",
            "itemtype": "method",
            "name": "isFullScreen",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "Display",
            "module": "Creatine"
        },
        {
            "file": "helpers\\Display.js",
            "line": 563,
            "description": "Tries to enter the browser into full screen mode.\nPlease note that this needs to be supported by the web browser and \nisn't the same thing as setting your game to fill the browser.",
            "itemtype": "method",
            "name": "startFullscreen",
            "class": "Display",
            "module": "Creatine"
        },
        {
            "file": "helpers\\Display.js",
            "line": 586,
            "description": "Stops full screen mode if the browser is in it.",
            "itemtype": "method",
            "name": "stopFullScreen",
            "class": "Display",
            "module": "Creatine"
        },
        {
            "file": "helpers\\Display.js",
            "line": 618,
            "description": "The resize change callback.",
            "itemtype": "method",
            "name": "_onResize",
            "access": "private",
            "tagname": "",
            "class": "Display",
            "module": "Creatine"
        },
        {
            "file": "helpers\\Display.js",
            "line": 632,
            "description": "The orientation change callback.",
            "itemtype": "method",
            "name": "_onOrientation",
            "access": "private",
            "tagname": "",
            "class": "Display",
            "module": "Creatine"
        },
        {
            "file": "helpers\\Display.js",
            "line": 650,
            "description": "The fullscreen change callback.",
            "itemtype": "method",
            "name": "_onFullscreen",
            "access": "private",
            "tagname": "",
            "class": "Display",
            "module": "Creatine"
        },
        {
            "file": "layout\\BoxSizer.js",
            "line": 87,
            "description": "The orientation of the sizer (use the HORIZONTAL or VERTICAL constants)",
            "itemtype": "property",
            "name": "orientation",
            "type": "{Constant}",
            "class": "BoxSizer",
            "module": "Creatine"
        },
        {
            "file": "layout\\BoxSizer.js",
            "line": 95,
            "description": "The list within all items in this sizer together with their proportions,\nborder, and anchor.",
            "itemtype": "property",
            "name": "children",
            "type": "{Array}",
            "access": "private",
            "tagname": "",
            "class": "BoxSizer",
            "module": "Creatine"
        },
        {
            "file": "layout\\BoxSizer.js",
            "line": 105,
            "description": "A rectangle representing the area of which the sizer can use.",
            "itemtype": "property",
            "name": "area",
            "type": "{createjs.Rectangle}",
            "class": "BoxSizer",
            "module": "Creatine"
        },
        {
            "file": "layout\\BoxSizer.js",
            "line": 115,
            "description": "Adds a new object to the sizer.",
            "itemtype": "method",
            "name": "add",
            "params": [
                {
                    "name": "object",
                    "description": "The DisplayObject to be organized by this sizer.",
                    "type": "Object"
                },
                {
                    "name": "proportion",
                    "description": "The expansion weight of this item, use 0 \n                (zero) to not expand. Default to 0.",
                    "type": "Number"
                },
                {
                    "name": "border",
                    "description": "The spacing around this item. Default to 0.",
                    "type": "Number"
                },
                {
                    "name": "anchor",
                    "description": "The anchor of the object, only useful if \n                  proportion is greater than 0. Default to \n                  <code>creatine.TOP_LEFT</code>",
                    "type": "Constant"
                }
            ],
            "class": "BoxSizer",
            "module": "Creatine"
        },
        {
            "file": "layout\\BoxSizer.js",
            "line": 135,
            "description": "Resize this sizer and its children.\n\nFor the root sizer, the parameter <code>area</code> does not to be \nspecified, but it is automatically set in nested sizers.",
            "itemtype": "method",
            "name": "layout",
            "params": [
                {
                    "name": "area",
                    "description": "A rectangle containing the usable area\n                            of the sizer.",
                    "type": "createjs.Rectangle"
                }
            ],
            "class": "BoxSizer",
            "module": "Creatine"
        },
        {
            "file": "layout\\BoxSizer.js",
            "line": 218,
            "description": "Propagate the layout to a child and move it accordingly to its anchor.",
            "itemtype": "method",
            "name": "_resize_child",
            "params": [
                {
                    "name": "item",
                    "description": "The DisplayObject to be organized by this sizer.",
                    "type": "Object"
                },
                {
                    "name": "area",
                    "description": "A rectangle containing the usable area\n                            of the object.",
                    "type": "createjs.Rectangle"
                },
                {
                    "name": "anchor",
                    "description": "The anchor of the object, only useful if \n                  proportion is greater than 0. Default to \n                  <code>creatine.TOP_LEFT</code>",
                    "type": "Constant"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "BoxSizer",
            "module": "Creatine"
        },
        {
            "file": "layout\\GridSizer.js",
            "line": 64,
            "description": "The number of rows in the grid.",
            "itemtype": "property",
            "name": "rows",
            "type": "{Number}",
            "class": "GridSizer",
            "module": "Creatine"
        },
        {
            "file": "layout\\GridSizer.js",
            "line": 72,
            "description": "The number of columns in the grid.",
            "itemtype": "property",
            "name": "cols",
            "type": "{Number}",
            "class": "GridSizer",
            "module": "Creatine"
        },
        {
            "file": "layout\\GridSizer.js",
            "line": 80,
            "description": "The list within all items in this sizer together with their proportions,\nborder, and anchor.",
            "itemtype": "property",
            "name": "children",
            "type": "{Array}",
            "access": "private",
            "tagname": "",
            "class": "GridSizer",
            "module": "Creatine"
        },
        {
            "file": "layout\\GridSizer.js",
            "line": 90,
            "description": "A rectangle representing the area of which the sizer can use.",
            "itemtype": "property",
            "name": "area",
            "type": "{createjs.Rectangle}",
            "class": "GridSizer",
            "module": "Creatine"
        },
        {
            "file": "layout\\GridSizer.js",
            "line": 100,
            "description": "Adds a new object to the sizer.",
            "itemtype": "method",
            "name": "add",
            "params": [
                {
                    "name": "object",
                    "description": "The DisplayObject to be organized by this sizer.",
                    "type": "Object"
                },
                {
                    "name": "border",
                    "description": "The spacing around this item. Default to 0.",
                    "type": "Number"
                },
                {
                    "name": "anchor",
                    "description": "The anchor of the object. Default to \n                  <code>creatine.TOP_LEFT</code>",
                    "type": "Constant"
                }
            ],
            "class": "GridSizer",
            "module": "Creatine"
        },
        {
            "file": "layout\\GridSizer.js",
            "line": 116,
            "description": "Resize this sizer and its children.\n\nFor the root sizer, the parameter <code>area</code> does not to be \nspecified, but it is automatically set in nested sizers.",
            "itemtype": "method",
            "name": "layout",
            "params": [
                {
                    "name": "area",
                    "description": "A rectangle containing the usable area\n                            of the sizer.",
                    "type": "createjs.Rectangle"
                }
            ],
            "class": "GridSizer",
            "module": "Creatine"
        },
        {
            "file": "layout\\GridSizer.js",
            "line": 147,
            "description": "Propagate the layout to a child and move it accordingly to its anchor.",
            "itemtype": "method",
            "name": "_resize_child",
            "params": [
                {
                    "name": "item",
                    "description": "The DisplayObject to be organized by this sizer.",
                    "type": "Object"
                },
                {
                    "name": "area",
                    "description": "A rectangle containing the usable area\n                            of the object.",
                    "type": "createjs.Rectangle"
                },
                {
                    "name": "anchor",
                    "description": "The anchor of the object, only useful if \n                  proportion is greater than 0. Default to \n                  <code>creatine.TOP_LEFT</code>",
                    "type": "Constant"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "GridSizer",
            "module": "Creatine"
        },
        {
            "file": "scene\\Director.js",
            "line": 69,
            "description": "The <code>createjs.Stage</code> instance.",
            "itemtype": "property",
            "name": "stage",
            "type": "{createjs.Stage}",
            "access": "private",
            "tagname": "",
            "class": "Director",
            "module": "Creatine"
        },
        {
            "file": "scene\\Director.js",
            "line": 78,
            "description": "The active scene. This variable can be viewed as the top of the \nscene stack.",
            "itemtype": "property",
            "name": "scene",
            "type": "{Scene}",
            "readonly": "",
            "class": "Director",
            "module": "Creatine"
        },
        {
            "file": "scene\\Director.js",
            "line": 88,
            "description": "The next scene which will replace the actual one. This variable is \nrequired to store the next scene until the transition effect is \ndone.",
            "itemtype": "property",
            "name": "nextScene",
            "type": "{Scene}",
            "readonly": "",
            "class": "Director",
            "module": "Creatine"
        },
        {
            "file": "scene\\Director.js",
            "line": 99,
            "description": "The stack of scenes. This list only stores the inactive scenes, use \nthe {{#crossLink \"Director/scene:property\"}}{{/crossLink}} to access\nthe active scene.",
            "itemtype": "property",
            "name": "sceneStack",
            "type": "{list}",
            "readonly": "",
            "class": "Director",
            "module": "Creatine"
        },
        {
            "file": "scene\\Director.js",
            "line": 110,
            "description": "Indicates if a transition effect is running or not.",
            "itemtype": "property",
            "name": "sceneStack",
            "type": "boolean",
            "readonly": "",
            "class": "Director",
            "module": "Creatine"
        },
        {
            "file": "scene\\Director.js",
            "line": 121,
            "description": "Pauses the current scene and send it to the stack. The new scene will \nreplace the current one.\n\nIf transition is provided, the transition effect will be applied before\nreplacing scenes.",
            "itemtype": "method",
            "name": "push",
            "params": [
                {
                    "name": "scene",
                    "description": "The new scene.",
                    "type": "Scene"
                },
                {
                    "name": "transition",
                    "description": "A transition effect.",
                    "type": "Transition"
                }
            ],
            "class": "Director",
            "module": "Creatine"
        },
        {
            "file": "scene\\Director.js",
            "line": 161,
            "description": "Removes the current scene and reactive the scene at the top of the \nstack.\n\nIf transition is provided, the transition effect will be applied before\nreplacing scenes.",
            "itemtype": "method",
            "name": "pop",
            "params": [
                {
                    "name": "transition",
                    "description": "A transition effect.",
                    "type": "Transition"
                }
            ],
            "class": "Director",
            "module": "Creatine"
        },
        {
            "file": "scene\\Director.js",
            "line": 203,
            "description": "Replaces the current scene by a new one.\n\nIf transition is provided, the transition effect will be applied before\nreplacing scenes.",
            "itemtype": "method",
            "name": "replace",
            "params": [
                {
                    "name": "scene",
                    "description": "The new scene.",
                    "type": "Scene"
                },
                {
                    "name": "transition",
                    "description": "A transition effect.",
                    "type": "Transition"
                }
            ],
            "class": "Director",
            "module": "Creatine"
        },
        {
            "file": "scene\\Director.js",
            "line": 245,
            "description": "Swap the position of {{#crossLink \"Director/scene:property\"}}{{/crossLink}}\nand {{#crossLink \"Director/nextScene:property\"}}{{/crossLink}} in the \nstage. This method is used in transitions to change the z-index of \nscenes.",
            "itemtype": "method",
            "name": "swapScenes",
            "access": "protected",
            "tagname": "",
            "class": "Director",
            "module": "Creatine"
        },
        {
            "file": "scene\\Director.js",
            "line": 261,
            "description": "Removes all scenes from the stack, without transitions.",
            "itemtype": "method",
            "name": "clearStack",
            "class": "Director",
            "module": "Creatine"
        },
        {
            "file": "scene\\Scene.js",
            "line": 47,
            "description": "Dispatched when the scene is set as the active scene in Director.",
            "itemtype": "event",
            "name": "sceneenter",
            "class": "Scene",
            "module": "Creatine"
        },
        {
            "file": "scene\\Scene.js",
            "line": 53,
            "description": "Dispatched when the scene is remove from Director.",
            "itemtype": "event",
            "name": "sceneexit",
            "class": "Scene",
            "module": "Creatine"
        },
        {
            "file": "scene\\Scene.js",
            "line": 59,
            "description": "Dispatched when the scene is paused, i.e., when it is replaced as a \nactive scene and placed in the Director stack.",
            "itemtype": "event",
            "name": "scenepause",
            "class": "Scene",
            "module": "Creatine"
        },
        {
            "file": "scene\\Scene.js",
            "line": 66,
            "description": "Dispatched when the scene is resumed, i.e., when it is removed from the \nDirector stack and set as the active scene.",
            "itemtype": "event",
            "name": "sceneresume",
            "class": "Scene",
            "module": "Creatine"
        },
        {
            "file": "tmx\\TMXImageLayer.js",
            "line": 45,
            "description": "Reference to the TMX map.",
            "itemtype": "property",
            "name": "map",
            "type": "{creatine.TMXMap}",
            "readonly": "",
            "class": "TMXImageLayer",
            "module": "Creatine"
        },
        {
            "file": "tmx\\TMXImageLayer.js",
            "line": 54,
            "description": "The path for the image.",
            "itemtype": "property",
            "name": "imagePath",
            "type": "{String}",
            "readonly": "",
            "class": "TMXImageLayer",
            "module": "Creatine"
        },
        {
            "file": "tmx\\TMXImageLayer.js",
            "line": 63,
            "description": "The name of the layer.",
            "itemtype": "property",
            "name": "name",
            "type": "{String}",
            "readonly": "",
            "class": "TMXImageLayer",
            "module": "Creatine"
        },
        {
            "file": "tmx\\TMXImageLayer.js",
            "line": 72,
            "description": "The amount of tiles in x axis. Not really useful here.",
            "itemtype": "property",
            "name": "width",
            "type": "{Integer}",
            "readonly": "",
            "class": "TMXImageLayer",
            "module": "Creatine"
        },
        {
            "file": "tmx\\TMXImageLayer.js",
            "line": 81,
            "description": "The amount of tiles in y axis. Not really useful here.",
            "itemtype": "property",
            "name": "y",
            "type": "{Integer}",
            "readonly": "",
            "class": "TMXImageLayer",
            "module": "Creatine"
        },
        {
            "file": "tmx\\TMXImageLayer.js",
            "line": 94,
            "description": "Initialization method.",
            "itemtype": "method",
            "name": "_initialize",
            "params": [
                {
                    "name": "map",
                    "description": "The map object.",
                    "type": "creatine.TMXMap"
                },
                {
                    "name": "data",
                    "description": "The data object (from tmx format).",
                    "type": "Object"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "TMXImageLayer",
            "module": "Creatine"
        },
        {
            "file": "tmx\\TMXIsometricTileLayer.js",
            "line": 49,
            "description": "Create the tiles. Override this method on the child class.",
            "itemtype": "method",
            "name": "_createTiles",
            "access": "protected",
            "tagname": "",
            "class": "TMXIsometricTileLayer",
            "module": "Creatine"
        },
        {
            "file": "tmx\\TMXMap.js",
            "line": 82,
            "description": "Map version",
            "itemtype": "property",
            "name": "version",
            "type": "{Integer}",
            "readonly": "",
            "class": "TMXMap",
            "module": "Creatine"
        },
        {
            "file": "tmx\\TMXMap.js",
            "line": 91,
            "description": "Orientation of the map, it supports \"orthogonal\", \"isometric\" and \n\"staggered\".",
            "itemtype": "property",
            "name": "orientation",
            "type": "{String}",
            "readonly": "",
            "class": "TMXMap",
            "module": "Creatine"
        },
        {
            "file": "tmx\\TMXMap.js",
            "line": 101,
            "description": "Order of rendering, supports \"right-down\", \"right-up\", \"left-down\" and\n\"left-up\".",
            "itemtype": "property",
            "name": "renderOrder",
            "type": "{String}",
            "readonly": "",
            "class": "TMXMap",
            "module": "Creatine"
        },
        {
            "file": "tmx\\TMXMap.js",
            "line": 111,
            "description": "Describes how many tiles the map have in the y axis.",
            "itemtype": "property",
            "name": "height",
            "type": "{Integer}",
            "readonly": "",
            "class": "TMXMap",
            "module": "Creatine"
        },
        {
            "file": "tmx\\TMXMap.js",
            "line": 120,
            "description": "Describes how many tiles the map have in the x axis.",
            "itemtype": "property",
            "name": "width",
            "type": "{Integer}",
            "readonly": "",
            "class": "TMXMap",
            "module": "Creatine"
        },
        {
            "file": "tmx\\TMXMap.js",
            "line": 129,
            "description": "Height of tiles.",
            "itemtype": "property",
            "name": "tileHeight",
            "type": "{Integer}",
            "readonly": "",
            "class": "TMXMap",
            "module": "Creatine"
        },
        {
            "file": "tmx\\TMXMap.js",
            "line": 138,
            "description": "Width of tiles.",
            "itemtype": "property",
            "name": "tileWidth",
            "type": "{Integer}",
            "readonly": "",
            "class": "TMXMap",
            "module": "Creatine"
        },
        {
            "file": "tmx\\TMXMap.js",
            "line": 147,
            "description": "The list of tilesets in the map.",
            "itemtype": "property",
            "name": "tilesets",
            "type": "{Array}",
            "readonly": "",
            "class": "TMXMap",
            "module": "Creatine"
        },
        {
            "file": "tmx\\TMXMap.js",
            "line": 156,
            "description": "The list of layers in the map.",
            "itemtype": "property",
            "name": "layers",
            "type": "{Array}",
            "readonly": "",
            "class": "TMXMap",
            "module": "Creatine"
        },
        {
            "file": "tmx\\TMXMap.js",
            "line": 165,
            "description": "User defined properties object.",
            "itemtype": "property",
            "name": "properties",
            "type": "{Object}",
            "readonly": "",
            "class": "TMXMap",
            "module": "Creatine"
        },
        {
            "file": "tmx\\TMXMap.js",
            "line": 179,
            "description": "Initialization method.",
            "itemtype": "method",
            "name": "_initialize",
            "params": [
                {
                    "name": "data",
                    "description": "A data object describing the map.",
                    "type": "Object"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "TMXMap",
            "module": "Creatine"
        },
        {
            "file": "tmx\\TMXMap.js",
            "line": 203,
            "description": "Create the tileset objects.",
            "itemtype": "method",
            "name": "_createTilesets",
            "params": [
                {
                    "name": "data",
                    "description": "An object following the TMX specification.",
                    "type": "Object"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "TMXMap",
            "module": "Creatine"
        },
        {
            "file": "tmx\\TMXMap.js",
            "line": 218,
            "description": "Create the layer objects.",
            "itemtype": "method",
            "name": "_createLayers",
            "params": [
                {
                    "name": "data",
                    "description": "An object following the TMX specification.",
                    "type": "Object"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "TMXMap",
            "module": "Creatine"
        },
        {
            "file": "tmx\\TMXMap.js",
            "line": 259,
            "description": "Returns the tileset which holds the provided global ID.",
            "itemtype": "method",
            "name": "getTilesetByGid",
            "params": [
                {
                    "name": "gid",
                    "description": "A global ID.",
                    "type": "Integer"
                }
            ],
            "class": "TMXMap",
            "module": "Creatine"
        },
        {
            "file": "tmx\\TMXMap.js",
            "line": 273,
            "description": "Returns a layer by name",
            "itemtype": "method",
            "name": "getLayerByName",
            "params": [
                {
                    "name": "name",
                    "description": "Layer name.",
                    "type": "String"
                }
            ],
            "class": "TMXMap",
            "module": "Creatine"
        },
        {
            "file": "tmx\\TMXObjectLayer.js",
            "line": 48,
            "description": "Reference to the TMX map.",
            "itemtype": "property",
            "name": "map",
            "type": "{creatine.TMXMap}",
            "readonly": "",
            "class": "TMXObjectLayer",
            "module": "Creatine"
        },
        {
            "file": "tmx\\TMXObjectLayer.js",
            "line": 57,
            "description": "The name of the layer.",
            "itemtype": "property",
            "name": "name",
            "type": "{String}",
            "readonly": "",
            "class": "TMXObjectLayer",
            "module": "Creatine"
        },
        {
            "file": "tmx\\TMXObjectLayer.js",
            "line": 66,
            "description": "List of objects in the layer.",
            "itemtype": "property",
            "name": "objects",
            "type": "{Array}",
            "readonly": "",
            "class": "TMXObjectLayer",
            "module": "Creatine"
        },
        {
            "file": "tmx\\TMXObjectLayer.js",
            "line": 75,
            "description": "Is the layer visible?",
            "itemtype": "property",
            "name": "visible",
            "type": "{Boolean}",
            "readonly": "",
            "class": "TMXObjectLayer",
            "module": "Creatine"
        },
        {
            "file": "tmx\\TMXObjectLayer.js",
            "line": 84,
            "description": "Opacity the layer.",
            "itemtype": "property",
            "name": "alpha",
            "type": "{Float}",
            "readonly": "",
            "class": "TMXObjectLayer",
            "module": "Creatine"
        },
        {
            "file": "tmx\\TMXObjectLayer.js",
            "line": 93,
            "description": "Initialization method.",
            "itemtype": "method",
            "name": "initialize",
            "params": [
                {
                    "name": "map",
                    "description": "The map object.",
                    "type": "creatine.TMXMap"
                },
                {
                    "name": "data",
                    "description": "The data object (from tmx format).",
                    "type": "Object"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "TMXObjectLayer",
            "module": "Creatine"
        },
        {
            "file": "tmx\\TMXOrthogonalTileLayer.js",
            "line": 49,
            "description": "Create the tiles. Override this method on the child class.",
            "itemtype": "method",
            "name": "_createTiles",
            "access": "protected",
            "tagname": "",
            "class": "TMXOrthogonalTileLayer",
            "module": "Creatine"
        },
        {
            "file": "tmx\\TMXStaggeredTileLayer.js",
            "line": 49,
            "description": "Create the tiles. Override this method on the child class.",
            "itemtype": "method",
            "name": "_createTiles",
            "access": "protected",
            "tagname": "",
            "class": "TMXStaggeredTileLayer",
            "module": "Creatine"
        },
        {
            "file": "tmx\\TMXTileLayer.js",
            "line": 53,
            "description": "Reference to the TMX map.",
            "itemtype": "property",
            "name": "map",
            "type": "{creatine.TMXMap}",
            "readonly": "",
            "class": "TMXTileLayer",
            "module": "Creatine"
        },
        {
            "file": "tmx\\TMXTileLayer.js",
            "line": 62,
            "description": "The name of the layer.",
            "itemtype": "property",
            "name": "name",
            "type": "{String}",
            "readonly": "",
            "class": "TMXTileLayer",
            "module": "Creatine"
        },
        {
            "file": "tmx\\TMXTileLayer.js",
            "line": 71,
            "description": "The list of tile ids in the layer.",
            "itemtype": "property",
            "name": "data",
            "type": "{Array}",
            "readonly": "",
            "class": "TMXTileLayer",
            "module": "Creatine"
        },
        {
            "file": "tmx\\TMXTileLayer.js",
            "line": 80,
            "description": "The amount of tiles in x axis.",
            "itemtype": "property",
            "name": "width",
            "type": "{Integer}",
            "readonly": "",
            "class": "TMXTileLayer",
            "module": "Creatine"
        },
        {
            "file": "tmx\\TMXTileLayer.js",
            "line": 89,
            "description": "The amount of tiles in y axis.",
            "itemtype": "property",
            "name": "y",
            "type": "{Integer}",
            "readonly": "",
            "class": "TMXTileLayer",
            "module": "Creatine"
        },
        {
            "file": "tmx\\TMXTileLayer.js",
            "line": 102,
            "description": "Initialization method.",
            "itemtype": "method",
            "name": "_initialize",
            "params": [
                {
                    "name": "map",
                    "description": "The map object.",
                    "type": "creatine.TMXMap"
                },
                {
                    "name": "data",
                    "description": "The data object (from tmx format).",
                    "type": "Object"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "TMXTileLayer",
            "module": "Creatine"
        },
        {
            "file": "tmx\\TMXTileLayer.js",
            "line": 128,
            "description": "Create the tiles. Override this method on the child class.",
            "itemtype": "method",
            "name": "_createTiles",
            "access": "protected",
            "tagname": "",
            "class": "TMXTileLayer",
            "module": "Creatine"
        },
        {
            "file": "tmx\\TMXTileset.js",
            "line": 66,
            "description": "The first global tile ID of this tileset.",
            "itemtype": "property",
            "name": "firstgid",
            "type": "{Integer}",
            "readonly": "",
            "class": "TMXTileset",
            "module": "Creatine"
        },
        {
            "file": "tmx\\TMXTileset.js",
            "line": 75,
            "description": "The name of this tileset.",
            "itemtype": "property",
            "name": "name",
            "type": "{String}",
            "readonly": "",
            "class": "TMXTileset",
            "module": "Creatine"
        },
        {
            "file": "tmx\\TMXTileset.js",
            "line": 84,
            "description": "The image width in pixels.",
            "itemtype": "property",
            "name": "width",
            "type": "{Integer}",
            "readonly": "",
            "class": "TMXTileset",
            "module": "Creatine"
        },
        {
            "file": "tmx\\TMXTileset.js",
            "line": 93,
            "description": "The image height in pixels.",
            "itemtype": "property",
            "name": "height",
            "type": "{Integer}",
            "readonly": "",
            "class": "TMXTileset",
            "module": "Creatine"
        },
        {
            "file": "tmx\\TMXTileset.js",
            "line": 102,
            "description": "The width of the tiles in this tileset.",
            "itemtype": "property",
            "name": "width",
            "type": "{Integer}",
            "readonly": "",
            "class": "TMXTileset",
            "module": "Creatine"
        },
        {
            "file": "tmx\\TMXTileset.js",
            "line": 111,
            "description": "The height of the tiles in this tileset.",
            "itemtype": "property",
            "name": "height",
            "type": "{Integer}",
            "readonly": "",
            "class": "TMXTileset",
            "module": "Creatine"
        },
        {
            "file": "tmx\\TMXTileset.js",
            "line": 120,
            "description": "The path to the image associated to this tilset.",
            "itemtype": "property",
            "name": "imagePath",
            "type": "{String}",
            "readonly": "",
            "class": "TMXTileset",
            "module": "Creatine"
        },
        {
            "file": "tmx\\TMXTileset.js",
            "line": 129,
            "description": "The offsetX to the tile origin. Notice that, tiled assumes (0, 0) as\nthe left-bottom.",
            "itemtype": "property",
            "name": "tileOffsetX",
            "type": "{Integer}",
            "readonly": "",
            "class": "TMXTileset",
            "module": "Creatine"
        },
        {
            "file": "tmx\\TMXTileset.js",
            "line": 139,
            "description": "The offsetY to the tile origin. Notice that, tiled assumes (0, 0) as\nthe left-bottom.",
            "itemtype": "property",
            "name": "tileOffsetY",
            "type": "{Integer}",
            "readonly": "",
            "class": "TMXTileset",
            "module": "Creatine"
        },
        {
            "file": "tmx\\TMXTileset.js",
            "line": 148,
            "description": "The spacing between tiles on the image.",
            "itemtype": "property",
            "name": "spacing",
            "type": "{Integer}",
            "readonly": "",
            "class": "TMXTileset",
            "module": "Creatine"
        },
        {
            "file": "tmx\\TMXTileset.js",
            "line": 157,
            "description": "The margin of the image.",
            "itemtype": "property",
            "name": "spacing",
            "type": "{Integer}",
            "readonly": "",
            "class": "TMXTileset",
            "module": "Creatine"
        },
        {
            "file": "tmx\\TMXTileset.js",
            "line": 166,
            "description": "An object with properties defined by user.",
            "itemtype": "property",
            "name": "properties",
            "type": "{Object}",
            "readonly": "",
            "class": "TMXTileset",
            "module": "Creatine"
        },
        {
            "file": "tmx\\TMXTileset.js",
            "line": 175,
            "description": "The spritesheet object loaded by this tileset.",
            "itemtype": "property",
            "name": "spritesheet",
            "type": "{createjs.SpriteSheet}",
            "readonly": "",
            "class": "TMXTileset",
            "module": "Creatine"
        },
        {
            "file": "tmx\\TMXTileset.js",
            "line": 184,
            "description": "Animation dict contained in the tileset.",
            "itemtype": "property",
            "name": "animations",
            "type": "{Object}",
            "readonly": "",
            "class": "TMXTileset",
            "module": "Creatine"
        },
        {
            "file": "tmx\\TMXTileset.js",
            "line": 197,
            "description": "Initialization method.",
            "itemtype": "method",
            "name": "_initialize",
            "params": [
                {
                    "name": "data",
                    "description": "The data object describing the tileset.",
                    "type": "Object"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "TMXTileset",
            "module": "Creatine"
        },
        {
            "file": "tmx\\TMXTileset.js",
            "line": 247,
            "description": "Loads the spritesheet.",
            "itemtype": "method",
            "name": "_loadSpriteSheet",
            "access": "protected",
            "tagname": "",
            "class": "TMXTileset",
            "module": "Creatine"
        },
        {
            "file": "transitions\\FadeIn.js",
            "line": 59,
            "description": "An Easing function from createjs.Ease.",
            "itemtype": "property",
            "name": "ease",
            "type": "{Function}",
            "class": "FadeIn",
            "module": "Creatine",
            "submodule": "Transitions"
        },
        {
            "file": "transitions\\FadeIn.js",
            "line": 67,
            "description": "The transition time, in milliseconds",
            "itemtype": "property",
            "name": "time",
            "type": "{Number}",
            "class": "FadeIn",
            "module": "Creatine",
            "submodule": "Transitions"
        },
        {
            "file": "transitions\\FadeIn.js",
            "line": 77,
            "description": "Performe the transition. This method is called only by Director.",
            "itemtype": "method",
            "name": "run",
            "params": [
                {
                    "name": "director",
                    "description": "The Director instance.",
                    "type": "Director"
                },
                {
                    "name": "outScene",
                    "description": "The active scene.",
                    "type": "Scene"
                },
                {
                    "name": "inScene",
                    "description": "The new scene.",
                    "type": "Scene"
                },
                {
                    "name": "callback",
                    "description": "The callback function called when the \n                  transition is done.",
                    "type": "Function"
                }
            ],
            "class": "FadeIn",
            "module": "Creatine",
            "submodule": "Transitions"
        },
        {
            "file": "transitions\\FadeInOut.js",
            "line": 60,
            "description": "An Easing function from createjs.Ease.",
            "itemtype": "property",
            "name": "ease",
            "type": "{Function}",
            "class": "FadeInOut",
            "module": "Creatine",
            "submodule": "Transitions"
        },
        {
            "file": "transitions\\FadeInOut.js",
            "line": 68,
            "description": "The transition time, in milliseconds",
            "itemtype": "property",
            "name": "time",
            "type": "{Number}",
            "class": "FadeInOut",
            "module": "Creatine",
            "submodule": "Transitions"
        },
        {
            "file": "transitions\\FadeInOut.js",
            "line": 78,
            "description": "Performe the transition. This method is called only by Director.",
            "itemtype": "method",
            "name": "run",
            "params": [
                {
                    "name": "director",
                    "description": "The Director instance.",
                    "type": "Director"
                },
                {
                    "name": "outScene",
                    "description": "The active scene.",
                    "type": "Scene"
                },
                {
                    "name": "inScene",
                    "description": "The new scene.",
                    "type": "Scene"
                },
                {
                    "name": "callback",
                    "description": "The callback function called when the \n                  transition is done.",
                    "type": "Function"
                }
            ],
            "class": "FadeInOut",
            "module": "Creatine",
            "submodule": "Transitions"
        },
        {
            "file": "transitions\\FadeOut.js",
            "line": 59,
            "description": "An Easing function from createjs.Ease.",
            "itemtype": "property",
            "name": "ease",
            "type": "{Function}",
            "class": "FadeOut",
            "module": "Creatine",
            "submodule": "Transitions"
        },
        {
            "file": "transitions\\FadeOut.js",
            "line": 67,
            "description": "The transition time, in milliseconds",
            "itemtype": "property",
            "name": "time",
            "type": "{Number}",
            "class": "FadeOut",
            "module": "Creatine",
            "submodule": "Transitions"
        },
        {
            "file": "transitions\\FadeOut.js",
            "line": 77,
            "description": "Performe the transition. This method is called only by Director.",
            "itemtype": "method",
            "name": "run",
            "params": [
                {
                    "name": "director",
                    "description": "The Director instance.",
                    "type": "Director"
                },
                {
                    "name": "outScene",
                    "description": "The active scene.",
                    "type": "Scene"
                },
                {
                    "name": "inScene",
                    "description": "The new scene.",
                    "type": "Scene"
                },
                {
                    "name": "callback",
                    "description": "The callback function called when the \n                  transition is done.",
                    "type": "Function"
                }
            ],
            "class": "FadeOut",
            "module": "Creatine",
            "submodule": "Transitions"
        },
        {
            "file": "transitions\\MoveIn.js",
            "line": 66,
            "description": "The direction from where the new scene will appear.",
            "itemtype": "property",
            "name": "direction",
            "type": "{Constant}",
            "class": "MoveIn",
            "module": "Creatine",
            "submodule": "Transitions"
        },
        {
            "file": "transitions\\MoveIn.js",
            "line": 74,
            "description": "An Easing function from createjs.Ease.",
            "itemtype": "property",
            "name": "ease",
            "type": "{Function}",
            "class": "MoveIn",
            "module": "Creatine",
            "submodule": "Transitions"
        },
        {
            "file": "transitions\\MoveIn.js",
            "line": 82,
            "description": "The transition time, in milliseconds",
            "itemtype": "property",
            "name": "time",
            "type": "{Number}",
            "class": "MoveIn",
            "module": "Creatine",
            "submodule": "Transitions"
        },
        {
            "file": "transitions\\MoveIn.js",
            "line": 92,
            "description": "Performe the transition. This method is called only by Director.",
            "itemtype": "method",
            "name": "run",
            "params": [
                {
                    "name": "director",
                    "description": "The Director instance.",
                    "type": "Director"
                },
                {
                    "name": "outScene",
                    "description": "The active scene.",
                    "type": "Scene"
                },
                {
                    "name": "inScene",
                    "description": "The new scene.",
                    "type": "Scene"
                },
                {
                    "name": "callback",
                    "description": "The callback function called when the \n                  transition is done.",
                    "type": "Function"
                }
            ],
            "class": "MoveIn",
            "module": "Creatine",
            "submodule": "Transitions"
        },
        {
            "file": "transitions\\MoveOut.js",
            "line": 65,
            "description": "The direction to where the current scene will leave.",
            "itemtype": "property",
            "name": "direction",
            "type": "{Constant}",
            "class": "MoveOut",
            "module": "Creatine",
            "submodule": "Transitions"
        },
        {
            "file": "transitions\\MoveOut.js",
            "line": 73,
            "description": "An Easing function from createjs.Ease.",
            "itemtype": "property",
            "name": "ease",
            "type": "{Function}",
            "class": "MoveOut",
            "module": "Creatine",
            "submodule": "Transitions"
        },
        {
            "file": "transitions\\MoveOut.js",
            "line": 81,
            "description": "The transition time, in milliseconds",
            "itemtype": "property",
            "name": "time",
            "type": "{Number}",
            "class": "MoveOut",
            "module": "Creatine",
            "submodule": "Transitions"
        },
        {
            "file": "transitions\\MoveOut.js",
            "line": 91,
            "description": "Performe the transition. This method is called only by Director.",
            "itemtype": "method",
            "name": "run",
            "params": [
                {
                    "name": "director",
                    "description": "The Director instance.",
                    "type": "Director"
                },
                {
                    "name": "outScene",
                    "description": "The active scene.",
                    "type": "Scene"
                },
                {
                    "name": "inScene",
                    "description": "The new scene.",
                    "type": "Scene"
                },
                {
                    "name": "callback",
                    "description": "The callback function called when the \n                  transition is done.",
                    "type": "Function"
                }
            ],
            "class": "MoveOut",
            "module": "Creatine",
            "submodule": "Transitions"
        },
        {
            "file": "transitions\\ScaleIn.js",
            "line": 59,
            "description": "An Easing function from createjs.Ease.",
            "itemtype": "property",
            "name": "ease",
            "type": "{Function}",
            "class": "ScaleIn",
            "module": "Creatine",
            "submodule": "Transitions"
        },
        {
            "file": "transitions\\ScaleIn.js",
            "line": 67,
            "description": "The transition time, in milliseconds",
            "itemtype": "property",
            "name": "time",
            "type": "{Number}",
            "class": "ScaleIn",
            "module": "Creatine",
            "submodule": "Transitions"
        },
        {
            "file": "transitions\\ScaleIn.js",
            "line": 77,
            "description": "Performe the transition. This method is called only by Director.",
            "itemtype": "method",
            "name": "run",
            "params": [
                {
                    "name": "director",
                    "description": "The Director instance.",
                    "type": "Director"
                },
                {
                    "name": "outScene",
                    "description": "The active scene.",
                    "type": "Scene"
                },
                {
                    "name": "in_scene",
                    "description": "The new scene.",
                    "type": "Scene"
                },
                {
                    "name": "callback",
                    "description": "The callback function called when the \n                  transition is done.",
                    "type": "Function"
                }
            ],
            "class": "ScaleIn",
            "module": "Creatine",
            "submodule": "Transitions"
        },
        {
            "file": "transitions\\ScaleInOut.js",
            "line": 59,
            "description": "An Easing function from createjs.Ease.",
            "itemtype": "property",
            "name": "ease",
            "type": "{Function}",
            "class": "ScaleInOut",
            "module": "Creatine",
            "submodule": "Transitions"
        },
        {
            "file": "transitions\\ScaleInOut.js",
            "line": 67,
            "description": "The transition time, in milliseconds",
            "itemtype": "property",
            "name": "time",
            "type": "{Number}",
            "class": "ScaleInOut",
            "module": "Creatine",
            "submodule": "Transitions"
        },
        {
            "file": "transitions\\ScaleInOut.js",
            "line": 77,
            "description": "Performe the transition. This method is called only by Director.",
            "itemtype": "method",
            "name": "run",
            "params": [
                {
                    "name": "director",
                    "description": "The Director instance.",
                    "type": "Director"
                },
                {
                    "name": "outScene",
                    "description": "The active scene.",
                    "type": "Scene"
                },
                {
                    "name": "inScene",
                    "description": "The new scene.",
                    "type": "Scene"
                },
                {
                    "name": "callback",
                    "description": "The callback function called when the \n                  transition is done.",
                    "type": "Function"
                }
            ],
            "class": "ScaleInOut",
            "module": "Creatine",
            "submodule": "Transitions"
        },
        {
            "file": "transitions\\ScaleOut.js",
            "line": 58,
            "description": "An Easing function from createjs.Ease.",
            "itemtype": "property",
            "name": "ease",
            "type": "{Function}",
            "class": "ScaleOut",
            "module": "Creatine",
            "submodule": "Transitions"
        },
        {
            "file": "transitions\\ScaleOut.js",
            "line": 66,
            "description": "The transition time, in milliseconds",
            "itemtype": "property",
            "name": "time",
            "type": "{Number}",
            "class": "ScaleOut",
            "module": "Creatine",
            "submodule": "Transitions"
        },
        {
            "file": "transitions\\ScaleOut.js",
            "line": 76,
            "description": "Performe the transition. This method is called only by Director.",
            "itemtype": "method",
            "name": "run",
            "params": [
                {
                    "name": "director",
                    "description": "The Director instance.",
                    "type": "Director"
                },
                {
                    "name": "outScene",
                    "description": "The active scene.",
                    "type": "Scene"
                },
                {
                    "name": "inScene",
                    "description": "The new scene.",
                    "type": "Scene"
                },
                {
                    "name": "callback",
                    "description": "The callback function called when the \n                  transition is done.",
                    "type": "Function"
                }
            ],
            "class": "ScaleOut",
            "module": "Creatine",
            "submodule": "Transitions"
        },
        {
            "file": "transitions\\Scroll.js",
            "line": 63,
            "description": "The direction to where the current scene will leave.",
            "itemtype": "property",
            "name": "direction",
            "type": "{Constant}",
            "class": "Scroll",
            "module": "Creatine",
            "submodule": "Transitions"
        },
        {
            "file": "transitions\\Scroll.js",
            "line": 71,
            "description": "An Easing function from createjs.Ease.",
            "itemtype": "property",
            "name": "ease",
            "type": "{Function}",
            "class": "Scroll",
            "module": "Creatine",
            "submodule": "Transitions"
        },
        {
            "file": "transitions\\Scroll.js",
            "line": 79,
            "description": "The transition time, in milliseconds",
            "itemtype": "property",
            "name": "time",
            "type": "{Number}",
            "class": "Scroll",
            "module": "Creatine",
            "submodule": "Transitions"
        },
        {
            "file": "transitions\\Scroll.js",
            "line": 89,
            "description": "Performe the transition. This method is called only by Director.",
            "itemtype": "method",
            "name": "run",
            "params": [
                {
                    "name": "director",
                    "description": "The Director instance.",
                    "type": "Director"
                },
                {
                    "name": "out_scene",
                    "description": "The active scene.",
                    "type": "Scene"
                },
                {
                    "name": "in_scene",
                    "description": "The new scene.",
                    "type": "Scene"
                },
                {
                    "name": "callback",
                    "description": "The callback function called when the \n                  transition is done.",
                    "type": "Function"
                }
            ],
            "class": "Scroll",
            "module": "Creatine",
            "submodule": "Transitions"
        }
    ],
    "warnings": []
}